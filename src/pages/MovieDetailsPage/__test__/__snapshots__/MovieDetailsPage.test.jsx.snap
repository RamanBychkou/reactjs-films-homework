// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MovieDetailsPage renders correctly MovieDetailsPage: render component 1`] = `
<section
  className="movieDetailsPageContainer"
  style={
    Object {
      "backgroundImage": "url(https://image.tmdb.org/t/p/w1280test",
      "backgroundPosition": "center",
      "backgroundRepeat": "no-repeat",
      "backgroundSize": "cover",
    }
  }
>
  <div
    className="mainfilmInfo"
  >
    <div
      className="container"
    >
      <div
        className="mainFilmTitle"
      >
        <h2
          className="filmTitle"
        />
        <div
          className="genres"
        >
          <ul />
        </div>
        <div
          className="starContainer"
        >
          <p
            className="rate"
          >
            0
          </p>
        </div>
      </div>
      <div>
        <div
          className="mainFilmInfo__info"
          id="mainFilmOverwie"
        >
          <p
            style={
              Object {
                "display": "-webkit-box",
              }
            }
          >
            
          </p>
        </div>
        <div
          className="btnContainer"
        >
          <button
            className="watch"
            id="watch"
            onClick={[Function]}
            tabIndex="0"
            type="button"
          >
            Watch Now
          </button>
          <button
            className="viewInfo"
            id="info"
            onClick={[Function]}
            tabIndex="0"
            type="button"
          >
            View Info
          </button>
        </div>
      </div>
    </div>
  </div>
</section>
`;

exports[`MovieDetailsPage renders correctly MovieDetailsPage: render preloader 1`] = `
Provider {
  "_isMounted": true,
  "_reactInternalFiber": FiberNode {
    "_debugHookTypes": null,
    "_debugID": 4,
    "_debugIsCurrentlyTiming": false,
    "_debugOwner": null,
    "_debugSource": null,
    "actualDuration": 0,
    "actualStartTime": -1,
    "alternate": null,
    "child": FiberNode {
      "_debugHookTypes": null,
      "_debugID": 5,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": [Circular],
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": -1,
      "alternate": null,
      "child": FiberNode {
        "_debugHookTypes": Array [
          "useMemo",
          "useMemo",
          "useContext",
          "useMemo",
          "useMemo",
          "useMemo",
          "useReducer",
          "useRef",
          "useRef",
          "useRef",
          "useRef",
          "useMemo",
          "useLayoutEffect",
          "useLayoutEffect",
          "useMemo",
          "useMemo",
        ],
        "_debugID": 6,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 7,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 8,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 9,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 10,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 11,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "p",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "App is loading",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "App is loading",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <p>
                    App is loading
                  </p>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "p",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <p>
                    App is loading
                  </p>,
                  "className": "preloader",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <p>
                    App is loading
                  </p>,
                  "className": "preloader",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="preloader"
                >
                  <p>
                    App is loading
                  </p>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "main",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <div
                  className="preloader"
                >
                  <p>
                    App is loading
                  </p>
                </div>,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <div
                  className="preloader"
                >
                  <p>
                    App is loading
                  </p>
                </div>,
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <main>
                <div
                  class="preloader"
                >
                  <p>
                    App is loading
                  </p>
                </div>
              </main>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "main",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "fetchGenres": [Function],
              "fetchMoviesOnGenre": [Function],
              "fetchPopular": [Function],
              "fetchSearchResults": [Function],
              "fetchVideo": [Function],
              "genres": Array [],
              "getMainMovieDetails": [Function],
              "mainMovie": Object {},
              "movies": Object {},
            },
            "memoizedState": Object {},
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "fetchGenres": [Function],
              "fetchMoviesOnGenre": [Function],
              "fetchPopular": [Function],
              "fetchSearchResults": [Function],
              "fetchVideo": [Function],
              "genres": Array [],
              "getMainMovieDetails": [Function],
              "mainMovie": Object {},
              "movies": Object {},
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": MovieDetailsPage {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "fetchGenres": [Function],
                "fetchMoviesOnGenre": [Function],
                "fetchPopular": [Function],
                "fetchSearchResults": [Function],
                "fetchVideo": [Function],
                "genres": Array [],
                "getMainMovieDetails": [Function],
                "mainMovie": Object {},
                "movies": Object {},
              },
              "refs": Object {},
              "state": Object {},
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": Object {
            "$$typeof": Symbol(react.provider),
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": [Circular],
              "_calculateChangedBits": null,
              "_currentRenderer": Object {},
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
          },
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <MovieDetailsPage
              fetchGenres={[Function]}
              fetchMoviesOnGenre={[Function]}
              fetchPopular={[Function]}
              fetchSearchResults={[Function]}
              fetchVideo={[Function]}
              genres={Array []}
              getMainMovieDetails={[Function]}
              mainMovie={Object {}}
              movies={Object {}}
            />,
            "value": Object {
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "subscription": Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": Subscription {
                  "handleChangeWrapper": [Function],
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
            },
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <MovieDetailsPage
              fetchGenres={[Function]}
              fetchMoviesOnGenre={[Function]}
              fetchPopular={[Function]}
              fetchSearchResults={[Function]}
              fetchVideo={[Function]}
              genres={Array []}
              getMainMovieDetails={[Function]}
              mainMovie={Object {}}
              movies={Object {}}
            />,
            "value": Object {
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "subscription": Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": Subscription {
                  "handleChangeWrapper": [Function],
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
            },
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 10,
          "treeBaseDuration": 0,
          "type": Object {
            "$$typeof": Symbol(react.provider),
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": [Circular],
              "_calculateChangedBits": null,
              "_currentRenderer": Object {},
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
          },
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": Object {
          "expirationTime": 0,
          "first": Object {
            "context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": Object {},
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
            "next": null,
            "observedBits": 1073741823,
          },
        },
        "effectTag": 5,
        "elementType": Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "displayName": "Connect(MovieDetailsPage)",
          "type": [Function],
        },
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {},
        "memoizedState": Object {
          "baseState": null,
          "baseUpdate": null,
          "memoizedState": Array [
            Array [
              undefined,
              undefined,
              Object {},
            ],
            Array [
              Object {},
            ],
          ],
          "next": Object {
            "baseState": null,
            "baseUpdate": null,
            "memoizedState": Array [
              Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": null,
                "_currentValue2": null,
                "_threadCount": 0,
              },
              Array [
                undefined,
                Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": null,
                  "_currentValue2": null,
                  "_threadCount": 0,
                },
              ],
            ],
            "next": Object {
              "baseState": null,
              "baseUpdate": null,
              "memoizedState": Array [
                [Function],
                Array [
                  Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                ],
              ],
              "next": Object {
                "baseState": null,
                "baseUpdate": null,
                "memoizedState": Array [
                  Array [
                    Subscription {
                      "handleChangeWrapper": [Function],
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": undefined,
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    [Function],
                  ],
                  Array [
                    Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    false,
                    Object {
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "subscription": Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": undefined,
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                    },
                  ],
                ],
                "next": Object {
                  "baseState": null,
                  "baseUpdate": null,
                  "memoizedState": Array [
                    Object {
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "subscription": Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": Subscription {
                          "handleChangeWrapper": [Function],
                          "listeners": Object {
                            "clear": [Function],
                            "get": [Function],
                            "notify": [Function],
                            "subscribe": [Function],
                          },
                          "onStateChange": [Function],
                          "parentSub": undefined,
                          "store": Object {
                            "clearActions": [Function],
                            "dispatch": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                          },
                          "unsubscribe": [Function],
                        },
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                    },
                    Array [
                      false,
                      Object {
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "subscription": Subscription {
                          "handleChangeWrapper": [Function],
                          "listeners": Object {
                            "clear": [Function],
                            "get": [Function],
                            "notify": [Function],
                            "subscribe": [Function],
                          },
                          "onStateChange": [Function],
                          "parentSub": undefined,
                          "store": Object {
                            "clearActions": [Function],
                            "dispatch": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                          },
                          "unsubscribe": [Function],
                        },
                      },
                      Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": Subscription {
                          "handleChangeWrapper": [Function],
                          "listeners": Object {
                            "clear": [Function],
                            "get": [Function],
                            "notify": [Function],
                            "subscribe": [Function],
                          },
                          "onStateChange": [Function],
                          "parentSub": undefined,
                          "store": Object {
                            "clearActions": [Function],
                            "dispatch": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                          },
                          "unsubscribe": [Function],
                        },
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                    ],
                  ],
                  "next": Object {
                    "baseState": Array [
                      null,
                      0,
                    ],
                    "baseUpdate": null,
                    "memoizedState": Array [
                      null,
                      0,
                    ],
                    "next": Object {
                      "baseState": null,
                      "baseUpdate": null,
                      "memoizedState": Object {
                        "current": Object {
                          "fetchGenres": [Function],
                          "fetchMoviesOnGenre": [Function],
                          "fetchPopular": [Function],
                          "fetchSearchResults": [Function],
                          "fetchVideo": [Function],
                          "genres": Array [],
                          "getMainMovieDetails": [Function],
                          "mainMovie": Object {},
                          "movies": Object {},
                        },
                      },
                      "next": Object {
                        "baseState": null,
                        "baseUpdate": null,
                        "memoizedState": Object {
                          "current": Object {},
                        },
                        "next": Object {
                          "baseState": null,
                          "baseUpdate": null,
                          "memoizedState": Object {
                            "current": undefined,
                          },
                          "next": Object {
                            "baseState": null,
                            "baseUpdate": null,
                            "memoizedState": Object {
                              "current": false,
                            },
                            "next": Object {
                              "baseState": null,
                              "baseUpdate": null,
                              "memoizedState": Array [
                                Object {
                                  "fetchGenres": [Function],
                                  "fetchMoviesOnGenre": [Function],
                                  "fetchPopular": [Function],
                                  "fetchSearchResults": [Function],
                                  "fetchVideo": [Function],
                                  "genres": Array [],
                                  "getMainMovieDetails": [Function],
                                  "mainMovie": Object {},
                                  "movies": Object {},
                                },
                                Array [
                                  Object {
                                    "clearActions": [Function],
                                    "dispatch": [Function],
                                    "getActions": [Function],
                                    "getState": [Function],
                                    "replaceReducer": [Function],
                                    "subscribe": [Function],
                                  },
                                  null,
                                  Object {},
                                ],
                              ],
                              "next": Object {
                                "baseState": null,
                                "baseUpdate": null,
                                "memoizedState": Object {
                                  "create": [Function],
                                  "deps": null,
                                  "destroy": undefined,
                                  "next": Object {
                                    "create": [Function],
                                    "deps": Array [
                                      Object {
                                        "clearActions": [Function],
                                        "dispatch": [Function],
                                        "getActions": [Function],
                                        "getState": [Function],
                                        "replaceReducer": [Function],
                                        "subscribe": [Function],
                                      },
                                      Subscription {
                                        "handleChangeWrapper": [Function],
                                        "listeners": Object {
                                          "clear": [Function],
                                          "get": [Function],
                                          "notify": [Function],
                                          "subscribe": [Function],
                                        },
                                        "onStateChange": [Function],
                                        "parentSub": Subscription {
                                          "handleChangeWrapper": [Function],
                                          "listeners": Object {
                                            "clear": [Function],
                                            "get": [Function],
                                            "notify": [Function],
                                            "subscribe": [Function],
                                          },
                                          "onStateChange": [Function],
                                          "parentSub": undefined,
                                          "store": Object {
                                            "clearActions": [Function],
                                            "dispatch": [Function],
                                            "getActions": [Function],
                                            "getState": [Function],
                                            "replaceReducer": [Function],
                                            "subscribe": [Function],
                                          },
                                          "unsubscribe": [Function],
                                        },
                                        "store": Object {
                                          "clearActions": [Function],
                                          "dispatch": [Function],
                                          "getActions": [Function],
                                          "getState": [Function],
                                          "replaceReducer": [Function],
                                          "subscribe": [Function],
                                        },
                                        "unsubscribe": [Function],
                                      },
                                      [Function],
                                    ],
                                    "destroy": [Function],
                                    "next": [Circular],
                                    "tag": 36,
                                  },
                                  "tag": 36,
                                },
                                "next": Object {
                                  "baseState": null,
                                  "baseUpdate": null,
                                  "memoizedState": Object {
                                    "create": [Function],
                                    "deps": Array [
                                      Object {
                                        "clearActions": [Function],
                                        "dispatch": [Function],
                                        "getActions": [Function],
                                        "getState": [Function],
                                        "replaceReducer": [Function],
                                        "subscribe": [Function],
                                      },
                                      Subscription {
                                        "handleChangeWrapper": [Function],
                                        "listeners": Object {
                                          "clear": [Function],
                                          "get": [Function],
                                          "notify": [Function],
                                          "subscribe": [Function],
                                        },
                                        "onStateChange": [Function],
                                        "parentSub": Subscription {
                                          "handleChangeWrapper": [Function],
                                          "listeners": Object {
                                            "clear": [Function],
                                            "get": [Function],
                                            "notify": [Function],
                                            "subscribe": [Function],
                                          },
                                          "onStateChange": [Function],
                                          "parentSub": undefined,
                                          "store": Object {
                                            "clearActions": [Function],
                                            "dispatch": [Function],
                                            "getActions": [Function],
                                            "getState": [Function],
                                            "replaceReducer": [Function],
                                            "subscribe": [Function],
                                          },
                                          "unsubscribe": [Function],
                                        },
                                        "store": Object {
                                          "clearActions": [Function],
                                          "dispatch": [Function],
                                          "getActions": [Function],
                                          "getState": [Function],
                                          "replaceReducer": [Function],
                                          "subscribe": [Function],
                                        },
                                        "unsubscribe": [Function],
                                      },
                                      [Function],
                                    ],
                                    "destroy": [Function],
                                    "next": Object {
                                      "create": [Function],
                                      "deps": null,
                                      "destroy": undefined,
                                      "next": [Circular],
                                      "tag": 36,
                                    },
                                    "tag": 36,
                                  },
                                  "next": Object {
                                    "baseState": null,
                                    "baseUpdate": null,
                                    "memoizedState": Array [
                                      <MovieDetailsPage
                                        fetchGenres={[Function]}
                                        fetchMoviesOnGenre={[Function]}
                                        fetchPopular={[Function]}
                                        fetchSearchResults={[Function]}
                                        fetchVideo={[Function]}
                                        genres={Array []}
                                        getMainMovieDetails={[Function]}
                                        mainMovie={Object {}}
                                        movies={Object {}}
                                      />,
                                      Array [
                                        undefined,
                                        [Function],
                                        Object {
                                          "fetchGenres": [Function],
                                          "fetchMoviesOnGenre": [Function],
                                          "fetchPopular": [Function],
                                          "fetchSearchResults": [Function],
                                          "fetchVideo": [Function],
                                          "genres": Array [],
                                          "getMainMovieDetails": [Function],
                                          "mainMovie": Object {},
                                          "movies": Object {},
                                        },
                                      ],
                                    ],
                                    "next": Object {
                                      "baseState": null,
                                      "baseUpdate": null,
                                      "memoizedState": Array [
                                        <Context.Provider
                                          value={
                                            Object {
                                              "store": Object {
                                                "clearActions": [Function],
                                                "dispatch": [Function],
                                                "getActions": [Function],
                                                "getState": [Function],
                                                "replaceReducer": [Function],
                                                "subscribe": [Function],
                                              },
                                              "subscription": Subscription {
                                                "handleChangeWrapper": [Function],
                                                "listeners": Object {
                                                  "clear": [Function],
                                                  "get": [Function],
                                                  "notify": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "onStateChange": [Function],
                                                "parentSub": Subscription {
                                                  "handleChangeWrapper": [Function],
                                                  "listeners": Object {
                                                    "clear": [Function],
                                                    "get": [Function],
                                                    "notify": [Function],
                                                    "subscribe": [Function],
                                                  },
                                                  "onStateChange": [Function],
                                                  "parentSub": undefined,
                                                  "store": Object {
                                                    "clearActions": [Function],
                                                    "dispatch": [Function],
                                                    "getActions": [Function],
                                                    "getState": [Function],
                                                    "replaceReducer": [Function],
                                                    "subscribe": [Function],
                                                  },
                                                  "unsubscribe": [Function],
                                                },
                                                "store": Object {
                                                  "clearActions": [Function],
                                                  "dispatch": [Function],
                                                  "getActions": [Function],
                                                  "getState": [Function],
                                                  "replaceReducer": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "unsubscribe": [Function],
                                              },
                                            }
                                          }
                                        >
                                          <MovieDetailsPage
                                            fetchGenres={[Function]}
                                            fetchMoviesOnGenre={[Function]}
                                            fetchPopular={[Function]}
                                            fetchSearchResults={[Function]}
                                            fetchVideo={[Function]}
                                            genres={Array []}
                                            getMainMovieDetails={[Function]}
                                            mainMovie={Object {}}
                                            movies={Object {}}
                                          />
                                        </Context.Provider>,
                                        Array [
                                          Object {
                                            "$$typeof": Symbol(react.context),
                                            "Consumer": Object {
                                              "$$typeof": Symbol(react.context),
                                              "_calculateChangedBits": null,
                                              "_context": [Circular],
                                            },
                                            "Provider": Object {
                                              "$$typeof": Symbol(react.provider),
                                              "_context": [Circular],
                                            },
                                            "_calculateChangedBits": null,
                                            "_currentRenderer": Object {},
                                            "_currentRenderer2": null,
                                            "_currentValue": null,
                                            "_currentValue2": null,
                                            "_threadCount": 0,
                                          },
                                          <MovieDetailsPage
                                            fetchGenres={[Function]}
                                            fetchMoviesOnGenre={[Function]}
                                            fetchPopular={[Function]}
                                            fetchSearchResults={[Function]}
                                            fetchVideo={[Function]}
                                            genres={Array []}
                                            getMainMovieDetails={[Function]}
                                            mainMovie={Object {}}
                                            movies={Object {}}
                                          />,
                                          Object {
                                            "store": Object {
                                              "clearActions": [Function],
                                              "dispatch": [Function],
                                              "getActions": [Function],
                                              "getState": [Function],
                                              "replaceReducer": [Function],
                                              "subscribe": [Function],
                                            },
                                            "subscription": Subscription {
                                              "handleChangeWrapper": [Function],
                                              "listeners": Object {
                                                "clear": [Function],
                                                "get": [Function],
                                                "notify": [Function],
                                                "subscribe": [Function],
                                              },
                                              "onStateChange": [Function],
                                              "parentSub": Subscription {
                                                "handleChangeWrapper": [Function],
                                                "listeners": Object {
                                                  "clear": [Function],
                                                  "get": [Function],
                                                  "notify": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "onStateChange": [Function],
                                                "parentSub": undefined,
                                                "store": Object {
                                                  "clearActions": [Function],
                                                  "dispatch": [Function],
                                                  "getActions": [Function],
                                                  "getState": [Function],
                                                  "replaceReducer": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "unsubscribe": [Function],
                                              },
                                              "store": Object {
                                                "clearActions": [Function],
                                                "dispatch": [Function],
                                                "getActions": [Function],
                                                "getState": [Function],
                                                "replaceReducer": [Function],
                                                "subscribe": [Function],
                                              },
                                              "unsubscribe": [Function],
                                            },
                                          },
                                        ],
                                      ],
                                      "next": null,
                                      "queue": null,
                                    },
                                    "queue": null,
                                  },
                                  "queue": null,
                                },
                                "queue": null,
                              },
                              "queue": null,
                            },
                            "queue": null,
                          },
                          "queue": null,
                        },
                        "queue": null,
                      },
                      "queue": null,
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "last": null,
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": Array [
                        null,
                        0,
                      ],
                    },
                  },
                  "queue": null,
                },
                "queue": null,
              },
              "queue": null,
            },
            "queue": null,
          },
          "queue": null,
        },
        "mode": 0,
        "nextEffect": [Circular],
        "pendingProps": Object {},
        "ref": null,
        "return": [Circular],
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": null,
        "tag": 15,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": Object {
          "lastEffect": Object {
            "create": [Function],
            "deps": Array [
              Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": Subscription {
                  "handleChangeWrapper": [Function],
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
              [Function],
            ],
            "destroy": [Function],
            "next": Object {
              "create": [Function],
              "deps": null,
              "destroy": undefined,
              "next": [Circular],
              "tag": 36,
            },
            "tag": 36,
          },
        },
      },
      "childExpirationTime": 0,
      "contextDependencies": null,
      "effectTag": 0,
      "elementType": Object {
        "$$typeof": Symbol(react.provider),
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": [Circular],
          },
          "Provider": [Circular],
          "_calculateChangedBits": null,
          "_currentRenderer": Object {},
          "_currentRenderer2": null,
          "_currentValue": null,
          "_currentValue2": null,
          "_threadCount": 0,
        },
      },
      "expirationTime": 0,
      "firstEffect": FiberNode {
        "_debugHookTypes": Array [
          "useMemo",
          "useMemo",
          "useContext",
          "useMemo",
          "useMemo",
          "useMemo",
          "useReducer",
          "useRef",
          "useRef",
          "useRef",
          "useRef",
          "useMemo",
          "useLayoutEffect",
          "useLayoutEffect",
          "useMemo",
          "useMemo",
        ],
        "_debugID": 6,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 7,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 8,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 9,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 10,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 11,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "p",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "App is loading",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "App is loading",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <p>
                    App is loading
                  </p>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "p",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <p>
                    App is loading
                  </p>,
                  "className": "preloader",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <p>
                    App is loading
                  </p>,
                  "className": "preloader",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="preloader"
                >
                  <p>
                    App is loading
                  </p>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "main",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <div
                  className="preloader"
                >
                  <p>
                    App is loading
                  </p>
                </div>,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <div
                  className="preloader"
                >
                  <p>
                    App is loading
                  </p>
                </div>,
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <main>
                <div
                  class="preloader"
                >
                  <p>
                    App is loading
                  </p>
                </div>
              </main>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "main",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "fetchGenres": [Function],
              "fetchMoviesOnGenre": [Function],
              "fetchPopular": [Function],
              "fetchSearchResults": [Function],
              "fetchVideo": [Function],
              "genres": Array [],
              "getMainMovieDetails": [Function],
              "mainMovie": Object {},
              "movies": Object {},
            },
            "memoizedState": Object {},
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "fetchGenres": [Function],
              "fetchMoviesOnGenre": [Function],
              "fetchPopular": [Function],
              "fetchSearchResults": [Function],
              "fetchVideo": [Function],
              "genres": Array [],
              "getMainMovieDetails": [Function],
              "mainMovie": Object {},
              "movies": Object {},
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": MovieDetailsPage {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "fetchGenres": [Function],
                "fetchMoviesOnGenre": [Function],
                "fetchPopular": [Function],
                "fetchSearchResults": [Function],
                "fetchVideo": [Function],
                "genres": Array [],
                "getMainMovieDetails": [Function],
                "mainMovie": Object {},
                "movies": Object {},
              },
              "refs": Object {},
              "state": Object {},
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": Object {
            "$$typeof": Symbol(react.provider),
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": [Circular],
              "_calculateChangedBits": null,
              "_currentRenderer": Object {},
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
          },
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <MovieDetailsPage
              fetchGenres={[Function]}
              fetchMoviesOnGenre={[Function]}
              fetchPopular={[Function]}
              fetchSearchResults={[Function]}
              fetchVideo={[Function]}
              genres={Array []}
              getMainMovieDetails={[Function]}
              mainMovie={Object {}}
              movies={Object {}}
            />,
            "value": Object {
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "subscription": Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": Subscription {
                  "handleChangeWrapper": [Function],
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
            },
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <MovieDetailsPage
              fetchGenres={[Function]}
              fetchMoviesOnGenre={[Function]}
              fetchPopular={[Function]}
              fetchSearchResults={[Function]}
              fetchVideo={[Function]}
              genres={Array []}
              getMainMovieDetails={[Function]}
              mainMovie={Object {}}
              movies={Object {}}
            />,
            "value": Object {
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "subscription": Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": Subscription {
                  "handleChangeWrapper": [Function],
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
            },
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 10,
          "treeBaseDuration": 0,
          "type": Object {
            "$$typeof": Symbol(react.provider),
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": [Circular],
              "_calculateChangedBits": null,
              "_currentRenderer": Object {},
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
          },
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": Object {
          "expirationTime": 0,
          "first": Object {
            "context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": Object {},
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
            "next": null,
            "observedBits": 1073741823,
          },
        },
        "effectTag": 5,
        "elementType": Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "displayName": "Connect(MovieDetailsPage)",
          "type": [Function],
        },
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {},
        "memoizedState": Object {
          "baseState": null,
          "baseUpdate": null,
          "memoizedState": Array [
            Array [
              undefined,
              undefined,
              Object {},
            ],
            Array [
              Object {},
            ],
          ],
          "next": Object {
            "baseState": null,
            "baseUpdate": null,
            "memoizedState": Array [
              Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": null,
                "_currentValue2": null,
                "_threadCount": 0,
              },
              Array [
                undefined,
                Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": null,
                  "_currentValue2": null,
                  "_threadCount": 0,
                },
              ],
            ],
            "next": Object {
              "baseState": null,
              "baseUpdate": null,
              "memoizedState": Array [
                [Function],
                Array [
                  Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                ],
              ],
              "next": Object {
                "baseState": null,
                "baseUpdate": null,
                "memoizedState": Array [
                  Array [
                    Subscription {
                      "handleChangeWrapper": [Function],
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": undefined,
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    [Function],
                  ],
                  Array [
                    Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    false,
                    Object {
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "subscription": Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": undefined,
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                    },
                  ],
                ],
                "next": Object {
                  "baseState": null,
                  "baseUpdate": null,
                  "memoizedState": Array [
                    Object {
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "subscription": Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": Subscription {
                          "handleChangeWrapper": [Function],
                          "listeners": Object {
                            "clear": [Function],
                            "get": [Function],
                            "notify": [Function],
                            "subscribe": [Function],
                          },
                          "onStateChange": [Function],
                          "parentSub": undefined,
                          "store": Object {
                            "clearActions": [Function],
                            "dispatch": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                          },
                          "unsubscribe": [Function],
                        },
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                    },
                    Array [
                      false,
                      Object {
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "subscription": Subscription {
                          "handleChangeWrapper": [Function],
                          "listeners": Object {
                            "clear": [Function],
                            "get": [Function],
                            "notify": [Function],
                            "subscribe": [Function],
                          },
                          "onStateChange": [Function],
                          "parentSub": undefined,
                          "store": Object {
                            "clearActions": [Function],
                            "dispatch": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                          },
                          "unsubscribe": [Function],
                        },
                      },
                      Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": Subscription {
                          "handleChangeWrapper": [Function],
                          "listeners": Object {
                            "clear": [Function],
                            "get": [Function],
                            "notify": [Function],
                            "subscribe": [Function],
                          },
                          "onStateChange": [Function],
                          "parentSub": undefined,
                          "store": Object {
                            "clearActions": [Function],
                            "dispatch": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                          },
                          "unsubscribe": [Function],
                        },
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                    ],
                  ],
                  "next": Object {
                    "baseState": Array [
                      null,
                      0,
                    ],
                    "baseUpdate": null,
                    "memoizedState": Array [
                      null,
                      0,
                    ],
                    "next": Object {
                      "baseState": null,
                      "baseUpdate": null,
                      "memoizedState": Object {
                        "current": Object {
                          "fetchGenres": [Function],
                          "fetchMoviesOnGenre": [Function],
                          "fetchPopular": [Function],
                          "fetchSearchResults": [Function],
                          "fetchVideo": [Function],
                          "genres": Array [],
                          "getMainMovieDetails": [Function],
                          "mainMovie": Object {},
                          "movies": Object {},
                        },
                      },
                      "next": Object {
                        "baseState": null,
                        "baseUpdate": null,
                        "memoizedState": Object {
                          "current": Object {},
                        },
                        "next": Object {
                          "baseState": null,
                          "baseUpdate": null,
                          "memoizedState": Object {
                            "current": undefined,
                          },
                          "next": Object {
                            "baseState": null,
                            "baseUpdate": null,
                            "memoizedState": Object {
                              "current": false,
                            },
                            "next": Object {
                              "baseState": null,
                              "baseUpdate": null,
                              "memoizedState": Array [
                                Object {
                                  "fetchGenres": [Function],
                                  "fetchMoviesOnGenre": [Function],
                                  "fetchPopular": [Function],
                                  "fetchSearchResults": [Function],
                                  "fetchVideo": [Function],
                                  "genres": Array [],
                                  "getMainMovieDetails": [Function],
                                  "mainMovie": Object {},
                                  "movies": Object {},
                                },
                                Array [
                                  Object {
                                    "clearActions": [Function],
                                    "dispatch": [Function],
                                    "getActions": [Function],
                                    "getState": [Function],
                                    "replaceReducer": [Function],
                                    "subscribe": [Function],
                                  },
                                  null,
                                  Object {},
                                ],
                              ],
                              "next": Object {
                                "baseState": null,
                                "baseUpdate": null,
                                "memoizedState": Object {
                                  "create": [Function],
                                  "deps": null,
                                  "destroy": undefined,
                                  "next": Object {
                                    "create": [Function],
                                    "deps": Array [
                                      Object {
                                        "clearActions": [Function],
                                        "dispatch": [Function],
                                        "getActions": [Function],
                                        "getState": [Function],
                                        "replaceReducer": [Function],
                                        "subscribe": [Function],
                                      },
                                      Subscription {
                                        "handleChangeWrapper": [Function],
                                        "listeners": Object {
                                          "clear": [Function],
                                          "get": [Function],
                                          "notify": [Function],
                                          "subscribe": [Function],
                                        },
                                        "onStateChange": [Function],
                                        "parentSub": Subscription {
                                          "handleChangeWrapper": [Function],
                                          "listeners": Object {
                                            "clear": [Function],
                                            "get": [Function],
                                            "notify": [Function],
                                            "subscribe": [Function],
                                          },
                                          "onStateChange": [Function],
                                          "parentSub": undefined,
                                          "store": Object {
                                            "clearActions": [Function],
                                            "dispatch": [Function],
                                            "getActions": [Function],
                                            "getState": [Function],
                                            "replaceReducer": [Function],
                                            "subscribe": [Function],
                                          },
                                          "unsubscribe": [Function],
                                        },
                                        "store": Object {
                                          "clearActions": [Function],
                                          "dispatch": [Function],
                                          "getActions": [Function],
                                          "getState": [Function],
                                          "replaceReducer": [Function],
                                          "subscribe": [Function],
                                        },
                                        "unsubscribe": [Function],
                                      },
                                      [Function],
                                    ],
                                    "destroy": [Function],
                                    "next": [Circular],
                                    "tag": 36,
                                  },
                                  "tag": 36,
                                },
                                "next": Object {
                                  "baseState": null,
                                  "baseUpdate": null,
                                  "memoizedState": Object {
                                    "create": [Function],
                                    "deps": Array [
                                      Object {
                                        "clearActions": [Function],
                                        "dispatch": [Function],
                                        "getActions": [Function],
                                        "getState": [Function],
                                        "replaceReducer": [Function],
                                        "subscribe": [Function],
                                      },
                                      Subscription {
                                        "handleChangeWrapper": [Function],
                                        "listeners": Object {
                                          "clear": [Function],
                                          "get": [Function],
                                          "notify": [Function],
                                          "subscribe": [Function],
                                        },
                                        "onStateChange": [Function],
                                        "parentSub": Subscription {
                                          "handleChangeWrapper": [Function],
                                          "listeners": Object {
                                            "clear": [Function],
                                            "get": [Function],
                                            "notify": [Function],
                                            "subscribe": [Function],
                                          },
                                          "onStateChange": [Function],
                                          "parentSub": undefined,
                                          "store": Object {
                                            "clearActions": [Function],
                                            "dispatch": [Function],
                                            "getActions": [Function],
                                            "getState": [Function],
                                            "replaceReducer": [Function],
                                            "subscribe": [Function],
                                          },
                                          "unsubscribe": [Function],
                                        },
                                        "store": Object {
                                          "clearActions": [Function],
                                          "dispatch": [Function],
                                          "getActions": [Function],
                                          "getState": [Function],
                                          "replaceReducer": [Function],
                                          "subscribe": [Function],
                                        },
                                        "unsubscribe": [Function],
                                      },
                                      [Function],
                                    ],
                                    "destroy": [Function],
                                    "next": Object {
                                      "create": [Function],
                                      "deps": null,
                                      "destroy": undefined,
                                      "next": [Circular],
                                      "tag": 36,
                                    },
                                    "tag": 36,
                                  },
                                  "next": Object {
                                    "baseState": null,
                                    "baseUpdate": null,
                                    "memoizedState": Array [
                                      <MovieDetailsPage
                                        fetchGenres={[Function]}
                                        fetchMoviesOnGenre={[Function]}
                                        fetchPopular={[Function]}
                                        fetchSearchResults={[Function]}
                                        fetchVideo={[Function]}
                                        genres={Array []}
                                        getMainMovieDetails={[Function]}
                                        mainMovie={Object {}}
                                        movies={Object {}}
                                      />,
                                      Array [
                                        undefined,
                                        [Function],
                                        Object {
                                          "fetchGenres": [Function],
                                          "fetchMoviesOnGenre": [Function],
                                          "fetchPopular": [Function],
                                          "fetchSearchResults": [Function],
                                          "fetchVideo": [Function],
                                          "genres": Array [],
                                          "getMainMovieDetails": [Function],
                                          "mainMovie": Object {},
                                          "movies": Object {},
                                        },
                                      ],
                                    ],
                                    "next": Object {
                                      "baseState": null,
                                      "baseUpdate": null,
                                      "memoizedState": Array [
                                        <Context.Provider
                                          value={
                                            Object {
                                              "store": Object {
                                                "clearActions": [Function],
                                                "dispatch": [Function],
                                                "getActions": [Function],
                                                "getState": [Function],
                                                "replaceReducer": [Function],
                                                "subscribe": [Function],
                                              },
                                              "subscription": Subscription {
                                                "handleChangeWrapper": [Function],
                                                "listeners": Object {
                                                  "clear": [Function],
                                                  "get": [Function],
                                                  "notify": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "onStateChange": [Function],
                                                "parentSub": Subscription {
                                                  "handleChangeWrapper": [Function],
                                                  "listeners": Object {
                                                    "clear": [Function],
                                                    "get": [Function],
                                                    "notify": [Function],
                                                    "subscribe": [Function],
                                                  },
                                                  "onStateChange": [Function],
                                                  "parentSub": undefined,
                                                  "store": Object {
                                                    "clearActions": [Function],
                                                    "dispatch": [Function],
                                                    "getActions": [Function],
                                                    "getState": [Function],
                                                    "replaceReducer": [Function],
                                                    "subscribe": [Function],
                                                  },
                                                  "unsubscribe": [Function],
                                                },
                                                "store": Object {
                                                  "clearActions": [Function],
                                                  "dispatch": [Function],
                                                  "getActions": [Function],
                                                  "getState": [Function],
                                                  "replaceReducer": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "unsubscribe": [Function],
                                              },
                                            }
                                          }
                                        >
                                          <MovieDetailsPage
                                            fetchGenres={[Function]}
                                            fetchMoviesOnGenre={[Function]}
                                            fetchPopular={[Function]}
                                            fetchSearchResults={[Function]}
                                            fetchVideo={[Function]}
                                            genres={Array []}
                                            getMainMovieDetails={[Function]}
                                            mainMovie={Object {}}
                                            movies={Object {}}
                                          />
                                        </Context.Provider>,
                                        Array [
                                          Object {
                                            "$$typeof": Symbol(react.context),
                                            "Consumer": Object {
                                              "$$typeof": Symbol(react.context),
                                              "_calculateChangedBits": null,
                                              "_context": [Circular],
                                            },
                                            "Provider": Object {
                                              "$$typeof": Symbol(react.provider),
                                              "_context": [Circular],
                                            },
                                            "_calculateChangedBits": null,
                                            "_currentRenderer": Object {},
                                            "_currentRenderer2": null,
                                            "_currentValue": null,
                                            "_currentValue2": null,
                                            "_threadCount": 0,
                                          },
                                          <MovieDetailsPage
                                            fetchGenres={[Function]}
                                            fetchMoviesOnGenre={[Function]}
                                            fetchPopular={[Function]}
                                            fetchSearchResults={[Function]}
                                            fetchVideo={[Function]}
                                            genres={Array []}
                                            getMainMovieDetails={[Function]}
                                            mainMovie={Object {}}
                                            movies={Object {}}
                                          />,
                                          Object {
                                            "store": Object {
                                              "clearActions": [Function],
                                              "dispatch": [Function],
                                              "getActions": [Function],
                                              "getState": [Function],
                                              "replaceReducer": [Function],
                                              "subscribe": [Function],
                                            },
                                            "subscription": Subscription {
                                              "handleChangeWrapper": [Function],
                                              "listeners": Object {
                                                "clear": [Function],
                                                "get": [Function],
                                                "notify": [Function],
                                                "subscribe": [Function],
                                              },
                                              "onStateChange": [Function],
                                              "parentSub": Subscription {
                                                "handleChangeWrapper": [Function],
                                                "listeners": Object {
                                                  "clear": [Function],
                                                  "get": [Function],
                                                  "notify": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "onStateChange": [Function],
                                                "parentSub": undefined,
                                                "store": Object {
                                                  "clearActions": [Function],
                                                  "dispatch": [Function],
                                                  "getActions": [Function],
                                                  "getState": [Function],
                                                  "replaceReducer": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "unsubscribe": [Function],
                                              },
                                              "store": Object {
                                                "clearActions": [Function],
                                                "dispatch": [Function],
                                                "getActions": [Function],
                                                "getState": [Function],
                                                "replaceReducer": [Function],
                                                "subscribe": [Function],
                                              },
                                              "unsubscribe": [Function],
                                            },
                                          },
                                        ],
                                      ],
                                      "next": null,
                                      "queue": null,
                                    },
                                    "queue": null,
                                  },
                                  "queue": null,
                                },
                                "queue": null,
                              },
                              "queue": null,
                            },
                            "queue": null,
                          },
                          "queue": null,
                        },
                        "queue": null,
                      },
                      "queue": null,
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "last": null,
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": Array [
                        null,
                        0,
                      ],
                    },
                  },
                  "queue": null,
                },
                "queue": null,
              },
              "queue": null,
            },
            "queue": null,
          },
          "queue": null,
        },
        "mode": 0,
        "nextEffect": [Circular],
        "pendingProps": Object {},
        "ref": null,
        "return": [Circular],
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": null,
        "tag": 15,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": Object {
          "lastEffect": Object {
            "create": [Function],
            "deps": Array [
              Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": Subscription {
                  "handleChangeWrapper": [Function],
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
              [Function],
            ],
            "destroy": [Function],
            "next": Object {
              "create": [Function],
              "deps": null,
              "destroy": undefined,
              "next": [Circular],
              "tag": 36,
            },
            "tag": 36,
          },
        },
      },
      "index": 0,
      "key": null,
      "lastEffect": FiberNode {
        "_debugHookTypes": Array [
          "useMemo",
          "useMemo",
          "useContext",
          "useMemo",
          "useMemo",
          "useMemo",
          "useReducer",
          "useRef",
          "useRef",
          "useRef",
          "useRef",
          "useMemo",
          "useLayoutEffect",
          "useLayoutEffect",
          "useMemo",
          "useMemo",
        ],
        "_debugID": 6,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 7,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 8,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 9,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 10,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 11,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "p",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "App is loading",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "App is loading",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <p>
                    App is loading
                  </p>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "p",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <p>
                    App is loading
                  </p>,
                  "className": "preloader",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <p>
                    App is loading
                  </p>,
                  "className": "preloader",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="preloader"
                >
                  <p>
                    App is loading
                  </p>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "main",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <div
                  className="preloader"
                >
                  <p>
                    App is loading
                  </p>
                </div>,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <div
                  className="preloader"
                >
                  <p>
                    App is loading
                  </p>
                </div>,
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <main>
                <div
                  class="preloader"
                >
                  <p>
                    App is loading
                  </p>
                </div>
              </main>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "main",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "fetchGenres": [Function],
              "fetchMoviesOnGenre": [Function],
              "fetchPopular": [Function],
              "fetchSearchResults": [Function],
              "fetchVideo": [Function],
              "genres": Array [],
              "getMainMovieDetails": [Function],
              "mainMovie": Object {},
              "movies": Object {},
            },
            "memoizedState": Object {},
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "fetchGenres": [Function],
              "fetchMoviesOnGenre": [Function],
              "fetchPopular": [Function],
              "fetchSearchResults": [Function],
              "fetchVideo": [Function],
              "genres": Array [],
              "getMainMovieDetails": [Function],
              "mainMovie": Object {},
              "movies": Object {},
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": MovieDetailsPage {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "fetchGenres": [Function],
                "fetchMoviesOnGenre": [Function],
                "fetchPopular": [Function],
                "fetchSearchResults": [Function],
                "fetchVideo": [Function],
                "genres": Array [],
                "getMainMovieDetails": [Function],
                "mainMovie": Object {},
                "movies": Object {},
              },
              "refs": Object {},
              "state": Object {},
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": Object {
            "$$typeof": Symbol(react.provider),
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": [Circular],
              "_calculateChangedBits": null,
              "_currentRenderer": Object {},
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
          },
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <MovieDetailsPage
              fetchGenres={[Function]}
              fetchMoviesOnGenre={[Function]}
              fetchPopular={[Function]}
              fetchSearchResults={[Function]}
              fetchVideo={[Function]}
              genres={Array []}
              getMainMovieDetails={[Function]}
              mainMovie={Object {}}
              movies={Object {}}
            />,
            "value": Object {
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "subscription": Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": Subscription {
                  "handleChangeWrapper": [Function],
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
            },
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <MovieDetailsPage
              fetchGenres={[Function]}
              fetchMoviesOnGenre={[Function]}
              fetchPopular={[Function]}
              fetchSearchResults={[Function]}
              fetchVideo={[Function]}
              genres={Array []}
              getMainMovieDetails={[Function]}
              mainMovie={Object {}}
              movies={Object {}}
            />,
            "value": Object {
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "subscription": Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": Subscription {
                  "handleChangeWrapper": [Function],
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
            },
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 10,
          "treeBaseDuration": 0,
          "type": Object {
            "$$typeof": Symbol(react.provider),
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": [Circular],
              "_calculateChangedBits": null,
              "_currentRenderer": Object {},
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
          },
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": Object {
          "expirationTime": 0,
          "first": Object {
            "context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": Object {},
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
            "next": null,
            "observedBits": 1073741823,
          },
        },
        "effectTag": 5,
        "elementType": Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "displayName": "Connect(MovieDetailsPage)",
          "type": [Function],
        },
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {},
        "memoizedState": Object {
          "baseState": null,
          "baseUpdate": null,
          "memoizedState": Array [
            Array [
              undefined,
              undefined,
              Object {},
            ],
            Array [
              Object {},
            ],
          ],
          "next": Object {
            "baseState": null,
            "baseUpdate": null,
            "memoizedState": Array [
              Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": null,
                "_currentValue2": null,
                "_threadCount": 0,
              },
              Array [
                undefined,
                Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": null,
                  "_currentValue2": null,
                  "_threadCount": 0,
                },
              ],
            ],
            "next": Object {
              "baseState": null,
              "baseUpdate": null,
              "memoizedState": Array [
                [Function],
                Array [
                  Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                ],
              ],
              "next": Object {
                "baseState": null,
                "baseUpdate": null,
                "memoizedState": Array [
                  Array [
                    Subscription {
                      "handleChangeWrapper": [Function],
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": undefined,
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    [Function],
                  ],
                  Array [
                    Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    false,
                    Object {
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "subscription": Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": undefined,
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                    },
                  ],
                ],
                "next": Object {
                  "baseState": null,
                  "baseUpdate": null,
                  "memoizedState": Array [
                    Object {
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "subscription": Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": Subscription {
                          "handleChangeWrapper": [Function],
                          "listeners": Object {
                            "clear": [Function],
                            "get": [Function],
                            "notify": [Function],
                            "subscribe": [Function],
                          },
                          "onStateChange": [Function],
                          "parentSub": undefined,
                          "store": Object {
                            "clearActions": [Function],
                            "dispatch": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                          },
                          "unsubscribe": [Function],
                        },
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                    },
                    Array [
                      false,
                      Object {
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "subscription": Subscription {
                          "handleChangeWrapper": [Function],
                          "listeners": Object {
                            "clear": [Function],
                            "get": [Function],
                            "notify": [Function],
                            "subscribe": [Function],
                          },
                          "onStateChange": [Function],
                          "parentSub": undefined,
                          "store": Object {
                            "clearActions": [Function],
                            "dispatch": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                          },
                          "unsubscribe": [Function],
                        },
                      },
                      Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": Subscription {
                          "handleChangeWrapper": [Function],
                          "listeners": Object {
                            "clear": [Function],
                            "get": [Function],
                            "notify": [Function],
                            "subscribe": [Function],
                          },
                          "onStateChange": [Function],
                          "parentSub": undefined,
                          "store": Object {
                            "clearActions": [Function],
                            "dispatch": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                          },
                          "unsubscribe": [Function],
                        },
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                    ],
                  ],
                  "next": Object {
                    "baseState": Array [
                      null,
                      0,
                    ],
                    "baseUpdate": null,
                    "memoizedState": Array [
                      null,
                      0,
                    ],
                    "next": Object {
                      "baseState": null,
                      "baseUpdate": null,
                      "memoizedState": Object {
                        "current": Object {
                          "fetchGenres": [Function],
                          "fetchMoviesOnGenre": [Function],
                          "fetchPopular": [Function],
                          "fetchSearchResults": [Function],
                          "fetchVideo": [Function],
                          "genres": Array [],
                          "getMainMovieDetails": [Function],
                          "mainMovie": Object {},
                          "movies": Object {},
                        },
                      },
                      "next": Object {
                        "baseState": null,
                        "baseUpdate": null,
                        "memoizedState": Object {
                          "current": Object {},
                        },
                        "next": Object {
                          "baseState": null,
                          "baseUpdate": null,
                          "memoizedState": Object {
                            "current": undefined,
                          },
                          "next": Object {
                            "baseState": null,
                            "baseUpdate": null,
                            "memoizedState": Object {
                              "current": false,
                            },
                            "next": Object {
                              "baseState": null,
                              "baseUpdate": null,
                              "memoizedState": Array [
                                Object {
                                  "fetchGenres": [Function],
                                  "fetchMoviesOnGenre": [Function],
                                  "fetchPopular": [Function],
                                  "fetchSearchResults": [Function],
                                  "fetchVideo": [Function],
                                  "genres": Array [],
                                  "getMainMovieDetails": [Function],
                                  "mainMovie": Object {},
                                  "movies": Object {},
                                },
                                Array [
                                  Object {
                                    "clearActions": [Function],
                                    "dispatch": [Function],
                                    "getActions": [Function],
                                    "getState": [Function],
                                    "replaceReducer": [Function],
                                    "subscribe": [Function],
                                  },
                                  null,
                                  Object {},
                                ],
                              ],
                              "next": Object {
                                "baseState": null,
                                "baseUpdate": null,
                                "memoizedState": Object {
                                  "create": [Function],
                                  "deps": null,
                                  "destroy": undefined,
                                  "next": Object {
                                    "create": [Function],
                                    "deps": Array [
                                      Object {
                                        "clearActions": [Function],
                                        "dispatch": [Function],
                                        "getActions": [Function],
                                        "getState": [Function],
                                        "replaceReducer": [Function],
                                        "subscribe": [Function],
                                      },
                                      Subscription {
                                        "handleChangeWrapper": [Function],
                                        "listeners": Object {
                                          "clear": [Function],
                                          "get": [Function],
                                          "notify": [Function],
                                          "subscribe": [Function],
                                        },
                                        "onStateChange": [Function],
                                        "parentSub": Subscription {
                                          "handleChangeWrapper": [Function],
                                          "listeners": Object {
                                            "clear": [Function],
                                            "get": [Function],
                                            "notify": [Function],
                                            "subscribe": [Function],
                                          },
                                          "onStateChange": [Function],
                                          "parentSub": undefined,
                                          "store": Object {
                                            "clearActions": [Function],
                                            "dispatch": [Function],
                                            "getActions": [Function],
                                            "getState": [Function],
                                            "replaceReducer": [Function],
                                            "subscribe": [Function],
                                          },
                                          "unsubscribe": [Function],
                                        },
                                        "store": Object {
                                          "clearActions": [Function],
                                          "dispatch": [Function],
                                          "getActions": [Function],
                                          "getState": [Function],
                                          "replaceReducer": [Function],
                                          "subscribe": [Function],
                                        },
                                        "unsubscribe": [Function],
                                      },
                                      [Function],
                                    ],
                                    "destroy": [Function],
                                    "next": [Circular],
                                    "tag": 36,
                                  },
                                  "tag": 36,
                                },
                                "next": Object {
                                  "baseState": null,
                                  "baseUpdate": null,
                                  "memoizedState": Object {
                                    "create": [Function],
                                    "deps": Array [
                                      Object {
                                        "clearActions": [Function],
                                        "dispatch": [Function],
                                        "getActions": [Function],
                                        "getState": [Function],
                                        "replaceReducer": [Function],
                                        "subscribe": [Function],
                                      },
                                      Subscription {
                                        "handleChangeWrapper": [Function],
                                        "listeners": Object {
                                          "clear": [Function],
                                          "get": [Function],
                                          "notify": [Function],
                                          "subscribe": [Function],
                                        },
                                        "onStateChange": [Function],
                                        "parentSub": Subscription {
                                          "handleChangeWrapper": [Function],
                                          "listeners": Object {
                                            "clear": [Function],
                                            "get": [Function],
                                            "notify": [Function],
                                            "subscribe": [Function],
                                          },
                                          "onStateChange": [Function],
                                          "parentSub": undefined,
                                          "store": Object {
                                            "clearActions": [Function],
                                            "dispatch": [Function],
                                            "getActions": [Function],
                                            "getState": [Function],
                                            "replaceReducer": [Function],
                                            "subscribe": [Function],
                                          },
                                          "unsubscribe": [Function],
                                        },
                                        "store": Object {
                                          "clearActions": [Function],
                                          "dispatch": [Function],
                                          "getActions": [Function],
                                          "getState": [Function],
                                          "replaceReducer": [Function],
                                          "subscribe": [Function],
                                        },
                                        "unsubscribe": [Function],
                                      },
                                      [Function],
                                    ],
                                    "destroy": [Function],
                                    "next": Object {
                                      "create": [Function],
                                      "deps": null,
                                      "destroy": undefined,
                                      "next": [Circular],
                                      "tag": 36,
                                    },
                                    "tag": 36,
                                  },
                                  "next": Object {
                                    "baseState": null,
                                    "baseUpdate": null,
                                    "memoizedState": Array [
                                      <MovieDetailsPage
                                        fetchGenres={[Function]}
                                        fetchMoviesOnGenre={[Function]}
                                        fetchPopular={[Function]}
                                        fetchSearchResults={[Function]}
                                        fetchVideo={[Function]}
                                        genres={Array []}
                                        getMainMovieDetails={[Function]}
                                        mainMovie={Object {}}
                                        movies={Object {}}
                                      />,
                                      Array [
                                        undefined,
                                        [Function],
                                        Object {
                                          "fetchGenres": [Function],
                                          "fetchMoviesOnGenre": [Function],
                                          "fetchPopular": [Function],
                                          "fetchSearchResults": [Function],
                                          "fetchVideo": [Function],
                                          "genres": Array [],
                                          "getMainMovieDetails": [Function],
                                          "mainMovie": Object {},
                                          "movies": Object {},
                                        },
                                      ],
                                    ],
                                    "next": Object {
                                      "baseState": null,
                                      "baseUpdate": null,
                                      "memoizedState": Array [
                                        <Context.Provider
                                          value={
                                            Object {
                                              "store": Object {
                                                "clearActions": [Function],
                                                "dispatch": [Function],
                                                "getActions": [Function],
                                                "getState": [Function],
                                                "replaceReducer": [Function],
                                                "subscribe": [Function],
                                              },
                                              "subscription": Subscription {
                                                "handleChangeWrapper": [Function],
                                                "listeners": Object {
                                                  "clear": [Function],
                                                  "get": [Function],
                                                  "notify": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "onStateChange": [Function],
                                                "parentSub": Subscription {
                                                  "handleChangeWrapper": [Function],
                                                  "listeners": Object {
                                                    "clear": [Function],
                                                    "get": [Function],
                                                    "notify": [Function],
                                                    "subscribe": [Function],
                                                  },
                                                  "onStateChange": [Function],
                                                  "parentSub": undefined,
                                                  "store": Object {
                                                    "clearActions": [Function],
                                                    "dispatch": [Function],
                                                    "getActions": [Function],
                                                    "getState": [Function],
                                                    "replaceReducer": [Function],
                                                    "subscribe": [Function],
                                                  },
                                                  "unsubscribe": [Function],
                                                },
                                                "store": Object {
                                                  "clearActions": [Function],
                                                  "dispatch": [Function],
                                                  "getActions": [Function],
                                                  "getState": [Function],
                                                  "replaceReducer": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "unsubscribe": [Function],
                                              },
                                            }
                                          }
                                        >
                                          <MovieDetailsPage
                                            fetchGenres={[Function]}
                                            fetchMoviesOnGenre={[Function]}
                                            fetchPopular={[Function]}
                                            fetchSearchResults={[Function]}
                                            fetchVideo={[Function]}
                                            genres={Array []}
                                            getMainMovieDetails={[Function]}
                                            mainMovie={Object {}}
                                            movies={Object {}}
                                          />
                                        </Context.Provider>,
                                        Array [
                                          Object {
                                            "$$typeof": Symbol(react.context),
                                            "Consumer": Object {
                                              "$$typeof": Symbol(react.context),
                                              "_calculateChangedBits": null,
                                              "_context": [Circular],
                                            },
                                            "Provider": Object {
                                              "$$typeof": Symbol(react.provider),
                                              "_context": [Circular],
                                            },
                                            "_calculateChangedBits": null,
                                            "_currentRenderer": Object {},
                                            "_currentRenderer2": null,
                                            "_currentValue": null,
                                            "_currentValue2": null,
                                            "_threadCount": 0,
                                          },
                                          <MovieDetailsPage
                                            fetchGenres={[Function]}
                                            fetchMoviesOnGenre={[Function]}
                                            fetchPopular={[Function]}
                                            fetchSearchResults={[Function]}
                                            fetchVideo={[Function]}
                                            genres={Array []}
                                            getMainMovieDetails={[Function]}
                                            mainMovie={Object {}}
                                            movies={Object {}}
                                          />,
                                          Object {
                                            "store": Object {
                                              "clearActions": [Function],
                                              "dispatch": [Function],
                                              "getActions": [Function],
                                              "getState": [Function],
                                              "replaceReducer": [Function],
                                              "subscribe": [Function],
                                            },
                                            "subscription": Subscription {
                                              "handleChangeWrapper": [Function],
                                              "listeners": Object {
                                                "clear": [Function],
                                                "get": [Function],
                                                "notify": [Function],
                                                "subscribe": [Function],
                                              },
                                              "onStateChange": [Function],
                                              "parentSub": Subscription {
                                                "handleChangeWrapper": [Function],
                                                "listeners": Object {
                                                  "clear": [Function],
                                                  "get": [Function],
                                                  "notify": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "onStateChange": [Function],
                                                "parentSub": undefined,
                                                "store": Object {
                                                  "clearActions": [Function],
                                                  "dispatch": [Function],
                                                  "getActions": [Function],
                                                  "getState": [Function],
                                                  "replaceReducer": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "unsubscribe": [Function],
                                              },
                                              "store": Object {
                                                "clearActions": [Function],
                                                "dispatch": [Function],
                                                "getActions": [Function],
                                                "getState": [Function],
                                                "replaceReducer": [Function],
                                                "subscribe": [Function],
                                              },
                                              "unsubscribe": [Function],
                                            },
                                          },
                                        ],
                                      ],
                                      "next": null,
                                      "queue": null,
                                    },
                                    "queue": null,
                                  },
                                  "queue": null,
                                },
                                "queue": null,
                              },
                              "queue": null,
                            },
                            "queue": null,
                          },
                          "queue": null,
                        },
                        "queue": null,
                      },
                      "queue": null,
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "last": null,
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": Array [
                        null,
                        0,
                      ],
                    },
                  },
                  "queue": null,
                },
                "queue": null,
              },
              "queue": null,
            },
            "queue": null,
          },
          "queue": null,
        },
        "mode": 0,
        "nextEffect": [Circular],
        "pendingProps": Object {},
        "ref": null,
        "return": [Circular],
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": null,
        "tag": 15,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": Object {
          "lastEffect": Object {
            "create": [Function],
            "deps": Array [
              Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": Subscription {
                  "handleChangeWrapper": [Function],
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
              [Function],
            ],
            "destroy": [Function],
            "next": Object {
              "create": [Function],
              "deps": null,
              "destroy": undefined,
              "next": [Circular],
              "tag": 36,
            },
            "tag": 36,
          },
        },
      },
      "memoizedProps": Object {
        "children": <Memo(ConnectFunction) />,
        "value": Object {
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "subscription": Subscription {
            "handleChangeWrapper": [Function],
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "unsubscribe": [Function],
          },
        },
      },
      "memoizedState": null,
      "mode": 0,
      "nextEffect": null,
      "pendingProps": Object {
        "children": <Memo(ConnectFunction) />,
        "value": Object {
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "subscription": Subscription {
            "handleChangeWrapper": [Function],
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "unsubscribe": [Function],
          },
        },
      },
      "ref": null,
      "return": [Circular],
      "selfBaseDuration": 0,
      "sibling": null,
      "stateNode": null,
      "tag": 10,
      "treeBaseDuration": 0,
      "type": Object {
        "$$typeof": Symbol(react.provider),
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": [Circular],
          },
          "Provider": [Circular],
          "_calculateChangedBits": null,
          "_currentRenderer": Object {},
          "_currentRenderer2": null,
          "_currentValue": null,
          "_currentValue2": null,
          "_threadCount": 0,
        },
      },
      "updateQueue": null,
    },
    "childExpirationTime": 0,
    "contextDependencies": null,
    "effectTag": 5,
    "elementType": [Function],
    "expirationTime": 0,
    "firstEffect": FiberNode {
      "_debugHookTypes": Array [
        "useMemo",
        "useMemo",
        "useContext",
        "useMemo",
        "useMemo",
        "useMemo",
        "useReducer",
        "useRef",
        "useRef",
        "useRef",
        "useRef",
        "useMemo",
        "useLayoutEffect",
        "useLayoutEffect",
        "useMemo",
        "useMemo",
      ],
      "_debugID": 6,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": null,
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": -1,
      "alternate": null,
      "child": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 7,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": [Circular],
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 8,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 9,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 10,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 11,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "p",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "App is loading",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "App is loading",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <p>
                  App is loading
                </p>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "p",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <p>
                  App is loading
                </p>,
                "className": "preloader",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <p>
                  App is loading
                </p>,
                "className": "preloader",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div
                class="preloader"
              >
                <p>
                  App is loading
                </p>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 0,
            "elementType": "main",
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <div
                className="preloader"
              >
                <p>
                  App is loading
                </p>
              </div>,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <div
                className="preloader"
              >
                <p>
                  App is loading
                </p>
              </div>,
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <main>
              <div
                class="preloader"
              >
                <p>
                  App is loading
                </p>
              </div>
            </main>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "main",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "fetchGenres": [Function],
            "fetchMoviesOnGenre": [Function],
            "fetchPopular": [Function],
            "fetchSearchResults": [Function],
            "fetchVideo": [Function],
            "genres": Array [],
            "getMainMovieDetails": [Function],
            "mainMovie": Object {},
            "movies": Object {},
          },
          "memoizedState": Object {},
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "fetchGenres": [Function],
            "fetchMoviesOnGenre": [Function],
            "fetchPopular": [Function],
            "fetchSearchResults": [Function],
            "fetchVideo": [Function],
            "genres": Array [],
            "getMainMovieDetails": [Function],
            "mainMovie": Object {},
            "movies": Object {},
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": MovieDetailsPage {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "fetchGenres": [Function],
              "fetchMoviesOnGenre": [Function],
              "fetchPopular": [Function],
              "fetchSearchResults": [Function],
              "fetchVideo": [Function],
              "genres": Array [],
              "getMainMovieDetails": [Function],
              "mainMovie": Object {},
              "movies": Object {},
            },
            "refs": Object {},
            "state": Object {},
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 0,
        "elementType": Object {
          "$$typeof": Symbol(react.provider),
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": [Circular],
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          },
        },
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "children": <MovieDetailsPage
            fetchGenres={[Function]}
            fetchMoviesOnGenre={[Function]}
            fetchPopular={[Function]}
            fetchSearchResults={[Function]}
            fetchVideo={[Function]}
            genres={Array []}
            getMainMovieDetails={[Function]}
            mainMovie={Object {}}
            movies={Object {}}
          />,
          "value": Object {
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "subscription": Subscription {
              "handleChangeWrapper": [Function],
              "listeners": Object {
                "clear": [Function],
                "get": [Function],
                "notify": [Function],
                "subscribe": [Function],
              },
              "onStateChange": [Function],
              "parentSub": Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": undefined,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "unsubscribe": [Function],
            },
          },
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": <MovieDetailsPage
            fetchGenres={[Function]}
            fetchMoviesOnGenre={[Function]}
            fetchPopular={[Function]}
            fetchSearchResults={[Function]}
            fetchVideo={[Function]}
            genres={Array []}
            getMainMovieDetails={[Function]}
            mainMovie={Object {}}
            movies={Object {}}
          />,
          "value": Object {
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "subscription": Subscription {
              "handleChangeWrapper": [Function],
              "listeners": Object {
                "clear": [Function],
                "get": [Function],
                "notify": [Function],
                "subscribe": [Function],
              },
              "onStateChange": [Function],
              "parentSub": Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": undefined,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "unsubscribe": [Function],
            },
          },
        },
        "ref": null,
        "return": [Circular],
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": null,
        "tag": 10,
        "treeBaseDuration": 0,
        "type": Object {
          "$$typeof": Symbol(react.provider),
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": [Circular],
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          },
        },
        "updateQueue": null,
      },
      "childExpirationTime": 0,
      "contextDependencies": Object {
        "expirationTime": 0,
        "first": Object {
          "context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          },
          "next": null,
          "observedBits": 1073741823,
        },
      },
      "effectTag": 5,
      "elementType": Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(MovieDetailsPage)",
        "type": [Function],
      },
      "expirationTime": 0,
      "firstEffect": null,
      "index": 0,
      "key": null,
      "lastEffect": null,
      "memoizedProps": Object {},
      "memoizedState": Object {
        "baseState": null,
        "baseUpdate": null,
        "memoizedState": Array [
          Array [
            undefined,
            undefined,
            Object {},
          ],
          Array [
            Object {},
          ],
        ],
        "next": Object {
          "baseState": null,
          "baseUpdate": null,
          "memoizedState": Array [
            Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": Object {},
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
            Array [
              undefined,
              Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": null,
                "_currentValue2": null,
                "_threadCount": 0,
              },
            ],
          ],
          "next": Object {
            "baseState": null,
            "baseUpdate": null,
            "memoizedState": Array [
              [Function],
              Array [
                Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
              ],
            ],
            "next": Object {
              "baseState": null,
              "baseUpdate": null,
              "memoizedState": Array [
                Array [
                  Subscription {
                    "handleChangeWrapper": [Function],
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": Subscription {
                      "handleChangeWrapper": [Function],
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  [Function],
                ],
                Array [
                  Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  false,
                  Object {
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "subscription": Subscription {
                      "handleChangeWrapper": [Function],
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                  },
                ],
              ],
              "next": Object {
                "baseState": null,
                "baseUpdate": null,
                "memoizedState": Array [
                  Object {
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "subscription": Subscription {
                      "handleChangeWrapper": [Function],
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": undefined,
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                  },
                  Array [
                    false,
                    Object {
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "subscription": Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": undefined,
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                    },
                    Subscription {
                      "handleChangeWrapper": [Function],
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": undefined,
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                  ],
                ],
                "next": Object {
                  "baseState": Array [
                    null,
                    0,
                  ],
                  "baseUpdate": null,
                  "memoizedState": Array [
                    null,
                    0,
                  ],
                  "next": Object {
                    "baseState": null,
                    "baseUpdate": null,
                    "memoizedState": Object {
                      "current": Object {
                        "fetchGenres": [Function],
                        "fetchMoviesOnGenre": [Function],
                        "fetchPopular": [Function],
                        "fetchSearchResults": [Function],
                        "fetchVideo": [Function],
                        "genres": Array [],
                        "getMainMovieDetails": [Function],
                        "mainMovie": Object {},
                        "movies": Object {},
                      },
                    },
                    "next": Object {
                      "baseState": null,
                      "baseUpdate": null,
                      "memoizedState": Object {
                        "current": Object {},
                      },
                      "next": Object {
                        "baseState": null,
                        "baseUpdate": null,
                        "memoizedState": Object {
                          "current": undefined,
                        },
                        "next": Object {
                          "baseState": null,
                          "baseUpdate": null,
                          "memoizedState": Object {
                            "current": false,
                          },
                          "next": Object {
                            "baseState": null,
                            "baseUpdate": null,
                            "memoizedState": Array [
                              Object {
                                "fetchGenres": [Function],
                                "fetchMoviesOnGenre": [Function],
                                "fetchPopular": [Function],
                                "fetchSearchResults": [Function],
                                "fetchVideo": [Function],
                                "genres": Array [],
                                "getMainMovieDetails": [Function],
                                "mainMovie": Object {},
                                "movies": Object {},
                              },
                              Array [
                                Object {
                                  "clearActions": [Function],
                                  "dispatch": [Function],
                                  "getActions": [Function],
                                  "getState": [Function],
                                  "replaceReducer": [Function],
                                  "subscribe": [Function],
                                },
                                null,
                                Object {},
                              ],
                            ],
                            "next": Object {
                              "baseState": null,
                              "baseUpdate": null,
                              "memoizedState": Object {
                                "create": [Function],
                                "deps": null,
                                "destroy": undefined,
                                "next": Object {
                                  "create": [Function],
                                  "deps": Array [
                                    Object {
                                      "clearActions": [Function],
                                      "dispatch": [Function],
                                      "getActions": [Function],
                                      "getState": [Function],
                                      "replaceReducer": [Function],
                                      "subscribe": [Function],
                                    },
                                    Subscription {
                                      "handleChangeWrapper": [Function],
                                      "listeners": Object {
                                        "clear": [Function],
                                        "get": [Function],
                                        "notify": [Function],
                                        "subscribe": [Function],
                                      },
                                      "onStateChange": [Function],
                                      "parentSub": Subscription {
                                        "handleChangeWrapper": [Function],
                                        "listeners": Object {
                                          "clear": [Function],
                                          "get": [Function],
                                          "notify": [Function],
                                          "subscribe": [Function],
                                        },
                                        "onStateChange": [Function],
                                        "parentSub": undefined,
                                        "store": Object {
                                          "clearActions": [Function],
                                          "dispatch": [Function],
                                          "getActions": [Function],
                                          "getState": [Function],
                                          "replaceReducer": [Function],
                                          "subscribe": [Function],
                                        },
                                        "unsubscribe": [Function],
                                      },
                                      "store": Object {
                                        "clearActions": [Function],
                                        "dispatch": [Function],
                                        "getActions": [Function],
                                        "getState": [Function],
                                        "replaceReducer": [Function],
                                        "subscribe": [Function],
                                      },
                                      "unsubscribe": [Function],
                                    },
                                    [Function],
                                  ],
                                  "destroy": [Function],
                                  "next": [Circular],
                                  "tag": 36,
                                },
                                "tag": 36,
                              },
                              "next": Object {
                                "baseState": null,
                                "baseUpdate": null,
                                "memoizedState": Object {
                                  "create": [Function],
                                  "deps": Array [
                                    Object {
                                      "clearActions": [Function],
                                      "dispatch": [Function],
                                      "getActions": [Function],
                                      "getState": [Function],
                                      "replaceReducer": [Function],
                                      "subscribe": [Function],
                                    },
                                    Subscription {
                                      "handleChangeWrapper": [Function],
                                      "listeners": Object {
                                        "clear": [Function],
                                        "get": [Function],
                                        "notify": [Function],
                                        "subscribe": [Function],
                                      },
                                      "onStateChange": [Function],
                                      "parentSub": Subscription {
                                        "handleChangeWrapper": [Function],
                                        "listeners": Object {
                                          "clear": [Function],
                                          "get": [Function],
                                          "notify": [Function],
                                          "subscribe": [Function],
                                        },
                                        "onStateChange": [Function],
                                        "parentSub": undefined,
                                        "store": Object {
                                          "clearActions": [Function],
                                          "dispatch": [Function],
                                          "getActions": [Function],
                                          "getState": [Function],
                                          "replaceReducer": [Function],
                                          "subscribe": [Function],
                                        },
                                        "unsubscribe": [Function],
                                      },
                                      "store": Object {
                                        "clearActions": [Function],
                                        "dispatch": [Function],
                                        "getActions": [Function],
                                        "getState": [Function],
                                        "replaceReducer": [Function],
                                        "subscribe": [Function],
                                      },
                                      "unsubscribe": [Function],
                                    },
                                    [Function],
                                  ],
                                  "destroy": [Function],
                                  "next": Object {
                                    "create": [Function],
                                    "deps": null,
                                    "destroy": undefined,
                                    "next": [Circular],
                                    "tag": 36,
                                  },
                                  "tag": 36,
                                },
                                "next": Object {
                                  "baseState": null,
                                  "baseUpdate": null,
                                  "memoizedState": Array [
                                    <MovieDetailsPage
                                      fetchGenres={[Function]}
                                      fetchMoviesOnGenre={[Function]}
                                      fetchPopular={[Function]}
                                      fetchSearchResults={[Function]}
                                      fetchVideo={[Function]}
                                      genres={Array []}
                                      getMainMovieDetails={[Function]}
                                      mainMovie={Object {}}
                                      movies={Object {}}
                                    />,
                                    Array [
                                      undefined,
                                      [Function],
                                      Object {
                                        "fetchGenres": [Function],
                                        "fetchMoviesOnGenre": [Function],
                                        "fetchPopular": [Function],
                                        "fetchSearchResults": [Function],
                                        "fetchVideo": [Function],
                                        "genres": Array [],
                                        "getMainMovieDetails": [Function],
                                        "mainMovie": Object {},
                                        "movies": Object {},
                                      },
                                    ],
                                  ],
                                  "next": Object {
                                    "baseState": null,
                                    "baseUpdate": null,
                                    "memoizedState": Array [
                                      <Context.Provider
                                        value={
                                          Object {
                                            "store": Object {
                                              "clearActions": [Function],
                                              "dispatch": [Function],
                                              "getActions": [Function],
                                              "getState": [Function],
                                              "replaceReducer": [Function],
                                              "subscribe": [Function],
                                            },
                                            "subscription": Subscription {
                                              "handleChangeWrapper": [Function],
                                              "listeners": Object {
                                                "clear": [Function],
                                                "get": [Function],
                                                "notify": [Function],
                                                "subscribe": [Function],
                                              },
                                              "onStateChange": [Function],
                                              "parentSub": Subscription {
                                                "handleChangeWrapper": [Function],
                                                "listeners": Object {
                                                  "clear": [Function],
                                                  "get": [Function],
                                                  "notify": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "onStateChange": [Function],
                                                "parentSub": undefined,
                                                "store": Object {
                                                  "clearActions": [Function],
                                                  "dispatch": [Function],
                                                  "getActions": [Function],
                                                  "getState": [Function],
                                                  "replaceReducer": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "unsubscribe": [Function],
                                              },
                                              "store": Object {
                                                "clearActions": [Function],
                                                "dispatch": [Function],
                                                "getActions": [Function],
                                                "getState": [Function],
                                                "replaceReducer": [Function],
                                                "subscribe": [Function],
                                              },
                                              "unsubscribe": [Function],
                                            },
                                          }
                                        }
                                      >
                                        <MovieDetailsPage
                                          fetchGenres={[Function]}
                                          fetchMoviesOnGenre={[Function]}
                                          fetchPopular={[Function]}
                                          fetchSearchResults={[Function]}
                                          fetchVideo={[Function]}
                                          genres={Array []}
                                          getMainMovieDetails={[Function]}
                                          mainMovie={Object {}}
                                          movies={Object {}}
                                        />
                                      </Context.Provider>,
                                      Array [
                                        Object {
                                          "$$typeof": Symbol(react.context),
                                          "Consumer": Object {
                                            "$$typeof": Symbol(react.context),
                                            "_calculateChangedBits": null,
                                            "_context": [Circular],
                                          },
                                          "Provider": Object {
                                            "$$typeof": Symbol(react.provider),
                                            "_context": [Circular],
                                          },
                                          "_calculateChangedBits": null,
                                          "_currentRenderer": Object {},
                                          "_currentRenderer2": null,
                                          "_currentValue": null,
                                          "_currentValue2": null,
                                          "_threadCount": 0,
                                        },
                                        <MovieDetailsPage
                                          fetchGenres={[Function]}
                                          fetchMoviesOnGenre={[Function]}
                                          fetchPopular={[Function]}
                                          fetchSearchResults={[Function]}
                                          fetchVideo={[Function]}
                                          genres={Array []}
                                          getMainMovieDetails={[Function]}
                                          mainMovie={Object {}}
                                          movies={Object {}}
                                        />,
                                        Object {
                                          "store": Object {
                                            "clearActions": [Function],
                                            "dispatch": [Function],
                                            "getActions": [Function],
                                            "getState": [Function],
                                            "replaceReducer": [Function],
                                            "subscribe": [Function],
                                          },
                                          "subscription": Subscription {
                                            "handleChangeWrapper": [Function],
                                            "listeners": Object {
                                              "clear": [Function],
                                              "get": [Function],
                                              "notify": [Function],
                                              "subscribe": [Function],
                                            },
                                            "onStateChange": [Function],
                                            "parentSub": Subscription {
                                              "handleChangeWrapper": [Function],
                                              "listeners": Object {
                                                "clear": [Function],
                                                "get": [Function],
                                                "notify": [Function],
                                                "subscribe": [Function],
                                              },
                                              "onStateChange": [Function],
                                              "parentSub": undefined,
                                              "store": Object {
                                                "clearActions": [Function],
                                                "dispatch": [Function],
                                                "getActions": [Function],
                                                "getState": [Function],
                                                "replaceReducer": [Function],
                                                "subscribe": [Function],
                                              },
                                              "unsubscribe": [Function],
                                            },
                                            "store": Object {
                                              "clearActions": [Function],
                                              "dispatch": [Function],
                                              "getActions": [Function],
                                              "getState": [Function],
                                              "replaceReducer": [Function],
                                              "subscribe": [Function],
                                            },
                                            "unsubscribe": [Function],
                                          },
                                        },
                                      ],
                                    ],
                                    "next": null,
                                    "queue": null,
                                  },
                                  "queue": null,
                                },
                                "queue": null,
                              },
                              "queue": null,
                            },
                            "queue": null,
                          },
                          "queue": null,
                        },
                        "queue": null,
                      },
                      "queue": null,
                    },
                    "queue": null,
                  },
                  "queue": Object {
                    "dispatch": [Function],
                    "last": null,
                    "lastRenderedReducer": [Function],
                    "lastRenderedState": Array [
                      null,
                      0,
                    ],
                  },
                },
                "queue": null,
              },
              "queue": null,
            },
            "queue": null,
          },
          "queue": null,
        },
        "queue": null,
      },
      "mode": 0,
      "nextEffect": [Circular],
      "pendingProps": Object {},
      "ref": null,
      "return": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 5,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": [Circular],
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": [Circular],
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 0,
        "elementType": Object {
          "$$typeof": Symbol(react.provider),
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": [Circular],
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          },
        },
        "expirationTime": 0,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": Object {
          "children": <Memo(ConnectFunction) />,
          "value": Object {
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "subscription": Subscription {
              "handleChangeWrapper": [Function],
              "listeners": Object {
                "clear": [Function],
                "get": [Function],
                "notify": [Function],
                "subscribe": [Function],
              },
              "onStateChange": [Function],
              "parentSub": undefined,
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "unsubscribe": [Function],
            },
          },
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": <Memo(ConnectFunction) />,
          "value": Object {
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "subscription": Subscription {
              "handleChangeWrapper": [Function],
              "listeners": Object {
                "clear": [Function],
                "get": [Function],
                "notify": [Function],
                "subscribe": [Function],
              },
              "onStateChange": [Function],
              "parentSub": undefined,
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "unsubscribe": [Function],
            },
          },
        },
        "ref": null,
        "return": [Circular],
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": null,
        "tag": 10,
        "treeBaseDuration": 0,
        "type": Object {
          "$$typeof": Symbol(react.provider),
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": [Circular],
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          },
        },
        "updateQueue": null,
      },
      "selfBaseDuration": 0,
      "sibling": null,
      "stateNode": null,
      "tag": 15,
      "treeBaseDuration": 0,
      "type": [Function],
      "updateQueue": Object {
        "lastEffect": Object {
          "create": [Function],
          "deps": Array [
            Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            Subscription {
              "handleChangeWrapper": [Function],
              "listeners": Object {
                "clear": [Function],
                "get": [Function],
                "notify": [Function],
                "subscribe": [Function],
              },
              "onStateChange": [Function],
              "parentSub": Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": undefined,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "unsubscribe": [Function],
            },
            [Function],
          ],
          "destroy": [Function],
          "next": Object {
            "create": [Function],
            "deps": null,
            "destroy": undefined,
            "next": [Circular],
            "tag": 36,
          },
          "tag": 36,
        },
      },
    },
    "index": 0,
    "key": null,
    "lastEffect": FiberNode {
      "_debugHookTypes": Array [
        "useMemo",
        "useMemo",
        "useContext",
        "useMemo",
        "useMemo",
        "useMemo",
        "useReducer",
        "useRef",
        "useRef",
        "useRef",
        "useRef",
        "useMemo",
        "useLayoutEffect",
        "useLayoutEffect",
        "useMemo",
        "useMemo",
      ],
      "_debugID": 6,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": null,
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": -1,
      "alternate": null,
      "child": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 7,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": [Circular],
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 8,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 9,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 10,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 11,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "p",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "App is loading",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "App is loading",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <p>
                  App is loading
                </p>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "p",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <p>
                  App is loading
                </p>,
                "className": "preloader",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <p>
                  App is loading
                </p>,
                "className": "preloader",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div
                class="preloader"
              >
                <p>
                  App is loading
                </p>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 0,
            "elementType": "main",
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <div
                className="preloader"
              >
                <p>
                  App is loading
                </p>
              </div>,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <div
                className="preloader"
              >
                <p>
                  App is loading
                </p>
              </div>,
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <main>
              <div
                class="preloader"
              >
                <p>
                  App is loading
                </p>
              </div>
            </main>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "main",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "fetchGenres": [Function],
            "fetchMoviesOnGenre": [Function],
            "fetchPopular": [Function],
            "fetchSearchResults": [Function],
            "fetchVideo": [Function],
            "genres": Array [],
            "getMainMovieDetails": [Function],
            "mainMovie": Object {},
            "movies": Object {},
          },
          "memoizedState": Object {},
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "fetchGenres": [Function],
            "fetchMoviesOnGenre": [Function],
            "fetchPopular": [Function],
            "fetchSearchResults": [Function],
            "fetchVideo": [Function],
            "genres": Array [],
            "getMainMovieDetails": [Function],
            "mainMovie": Object {},
            "movies": Object {},
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": MovieDetailsPage {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "fetchGenres": [Function],
              "fetchMoviesOnGenre": [Function],
              "fetchPopular": [Function],
              "fetchSearchResults": [Function],
              "fetchVideo": [Function],
              "genres": Array [],
              "getMainMovieDetails": [Function],
              "mainMovie": Object {},
              "movies": Object {},
            },
            "refs": Object {},
            "state": Object {},
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 0,
        "elementType": Object {
          "$$typeof": Symbol(react.provider),
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": [Circular],
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          },
        },
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "children": <MovieDetailsPage
            fetchGenres={[Function]}
            fetchMoviesOnGenre={[Function]}
            fetchPopular={[Function]}
            fetchSearchResults={[Function]}
            fetchVideo={[Function]}
            genres={Array []}
            getMainMovieDetails={[Function]}
            mainMovie={Object {}}
            movies={Object {}}
          />,
          "value": Object {
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "subscription": Subscription {
              "handleChangeWrapper": [Function],
              "listeners": Object {
                "clear": [Function],
                "get": [Function],
                "notify": [Function],
                "subscribe": [Function],
              },
              "onStateChange": [Function],
              "parentSub": Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": undefined,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "unsubscribe": [Function],
            },
          },
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": <MovieDetailsPage
            fetchGenres={[Function]}
            fetchMoviesOnGenre={[Function]}
            fetchPopular={[Function]}
            fetchSearchResults={[Function]}
            fetchVideo={[Function]}
            genres={Array []}
            getMainMovieDetails={[Function]}
            mainMovie={Object {}}
            movies={Object {}}
          />,
          "value": Object {
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "subscription": Subscription {
              "handleChangeWrapper": [Function],
              "listeners": Object {
                "clear": [Function],
                "get": [Function],
                "notify": [Function],
                "subscribe": [Function],
              },
              "onStateChange": [Function],
              "parentSub": Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": undefined,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "unsubscribe": [Function],
            },
          },
        },
        "ref": null,
        "return": [Circular],
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": null,
        "tag": 10,
        "treeBaseDuration": 0,
        "type": Object {
          "$$typeof": Symbol(react.provider),
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": [Circular],
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          },
        },
        "updateQueue": null,
      },
      "childExpirationTime": 0,
      "contextDependencies": Object {
        "expirationTime": 0,
        "first": Object {
          "context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          },
          "next": null,
          "observedBits": 1073741823,
        },
      },
      "effectTag": 5,
      "elementType": Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(MovieDetailsPage)",
        "type": [Function],
      },
      "expirationTime": 0,
      "firstEffect": null,
      "index": 0,
      "key": null,
      "lastEffect": null,
      "memoizedProps": Object {},
      "memoizedState": Object {
        "baseState": null,
        "baseUpdate": null,
        "memoizedState": Array [
          Array [
            undefined,
            undefined,
            Object {},
          ],
          Array [
            Object {},
          ],
        ],
        "next": Object {
          "baseState": null,
          "baseUpdate": null,
          "memoizedState": Array [
            Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": Object {},
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
            Array [
              undefined,
              Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": null,
                "_currentValue2": null,
                "_threadCount": 0,
              },
            ],
          ],
          "next": Object {
            "baseState": null,
            "baseUpdate": null,
            "memoizedState": Array [
              [Function],
              Array [
                Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
              ],
            ],
            "next": Object {
              "baseState": null,
              "baseUpdate": null,
              "memoizedState": Array [
                Array [
                  Subscription {
                    "handleChangeWrapper": [Function],
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": Subscription {
                      "handleChangeWrapper": [Function],
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  [Function],
                ],
                Array [
                  Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  false,
                  Object {
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "subscription": Subscription {
                      "handleChangeWrapper": [Function],
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                  },
                ],
              ],
              "next": Object {
                "baseState": null,
                "baseUpdate": null,
                "memoizedState": Array [
                  Object {
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "subscription": Subscription {
                      "handleChangeWrapper": [Function],
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": undefined,
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                  },
                  Array [
                    false,
                    Object {
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "subscription": Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": undefined,
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                    },
                    Subscription {
                      "handleChangeWrapper": [Function],
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": undefined,
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                  ],
                ],
                "next": Object {
                  "baseState": Array [
                    null,
                    0,
                  ],
                  "baseUpdate": null,
                  "memoizedState": Array [
                    null,
                    0,
                  ],
                  "next": Object {
                    "baseState": null,
                    "baseUpdate": null,
                    "memoizedState": Object {
                      "current": Object {
                        "fetchGenres": [Function],
                        "fetchMoviesOnGenre": [Function],
                        "fetchPopular": [Function],
                        "fetchSearchResults": [Function],
                        "fetchVideo": [Function],
                        "genres": Array [],
                        "getMainMovieDetails": [Function],
                        "mainMovie": Object {},
                        "movies": Object {},
                      },
                    },
                    "next": Object {
                      "baseState": null,
                      "baseUpdate": null,
                      "memoizedState": Object {
                        "current": Object {},
                      },
                      "next": Object {
                        "baseState": null,
                        "baseUpdate": null,
                        "memoizedState": Object {
                          "current": undefined,
                        },
                        "next": Object {
                          "baseState": null,
                          "baseUpdate": null,
                          "memoizedState": Object {
                            "current": false,
                          },
                          "next": Object {
                            "baseState": null,
                            "baseUpdate": null,
                            "memoizedState": Array [
                              Object {
                                "fetchGenres": [Function],
                                "fetchMoviesOnGenre": [Function],
                                "fetchPopular": [Function],
                                "fetchSearchResults": [Function],
                                "fetchVideo": [Function],
                                "genres": Array [],
                                "getMainMovieDetails": [Function],
                                "mainMovie": Object {},
                                "movies": Object {},
                              },
                              Array [
                                Object {
                                  "clearActions": [Function],
                                  "dispatch": [Function],
                                  "getActions": [Function],
                                  "getState": [Function],
                                  "replaceReducer": [Function],
                                  "subscribe": [Function],
                                },
                                null,
                                Object {},
                              ],
                            ],
                            "next": Object {
                              "baseState": null,
                              "baseUpdate": null,
                              "memoizedState": Object {
                                "create": [Function],
                                "deps": null,
                                "destroy": undefined,
                                "next": Object {
                                  "create": [Function],
                                  "deps": Array [
                                    Object {
                                      "clearActions": [Function],
                                      "dispatch": [Function],
                                      "getActions": [Function],
                                      "getState": [Function],
                                      "replaceReducer": [Function],
                                      "subscribe": [Function],
                                    },
                                    Subscription {
                                      "handleChangeWrapper": [Function],
                                      "listeners": Object {
                                        "clear": [Function],
                                        "get": [Function],
                                        "notify": [Function],
                                        "subscribe": [Function],
                                      },
                                      "onStateChange": [Function],
                                      "parentSub": Subscription {
                                        "handleChangeWrapper": [Function],
                                        "listeners": Object {
                                          "clear": [Function],
                                          "get": [Function],
                                          "notify": [Function],
                                          "subscribe": [Function],
                                        },
                                        "onStateChange": [Function],
                                        "parentSub": undefined,
                                        "store": Object {
                                          "clearActions": [Function],
                                          "dispatch": [Function],
                                          "getActions": [Function],
                                          "getState": [Function],
                                          "replaceReducer": [Function],
                                          "subscribe": [Function],
                                        },
                                        "unsubscribe": [Function],
                                      },
                                      "store": Object {
                                        "clearActions": [Function],
                                        "dispatch": [Function],
                                        "getActions": [Function],
                                        "getState": [Function],
                                        "replaceReducer": [Function],
                                        "subscribe": [Function],
                                      },
                                      "unsubscribe": [Function],
                                    },
                                    [Function],
                                  ],
                                  "destroy": [Function],
                                  "next": [Circular],
                                  "tag": 36,
                                },
                                "tag": 36,
                              },
                              "next": Object {
                                "baseState": null,
                                "baseUpdate": null,
                                "memoizedState": Object {
                                  "create": [Function],
                                  "deps": Array [
                                    Object {
                                      "clearActions": [Function],
                                      "dispatch": [Function],
                                      "getActions": [Function],
                                      "getState": [Function],
                                      "replaceReducer": [Function],
                                      "subscribe": [Function],
                                    },
                                    Subscription {
                                      "handleChangeWrapper": [Function],
                                      "listeners": Object {
                                        "clear": [Function],
                                        "get": [Function],
                                        "notify": [Function],
                                        "subscribe": [Function],
                                      },
                                      "onStateChange": [Function],
                                      "parentSub": Subscription {
                                        "handleChangeWrapper": [Function],
                                        "listeners": Object {
                                          "clear": [Function],
                                          "get": [Function],
                                          "notify": [Function],
                                          "subscribe": [Function],
                                        },
                                        "onStateChange": [Function],
                                        "parentSub": undefined,
                                        "store": Object {
                                          "clearActions": [Function],
                                          "dispatch": [Function],
                                          "getActions": [Function],
                                          "getState": [Function],
                                          "replaceReducer": [Function],
                                          "subscribe": [Function],
                                        },
                                        "unsubscribe": [Function],
                                      },
                                      "store": Object {
                                        "clearActions": [Function],
                                        "dispatch": [Function],
                                        "getActions": [Function],
                                        "getState": [Function],
                                        "replaceReducer": [Function],
                                        "subscribe": [Function],
                                      },
                                      "unsubscribe": [Function],
                                    },
                                    [Function],
                                  ],
                                  "destroy": [Function],
                                  "next": Object {
                                    "create": [Function],
                                    "deps": null,
                                    "destroy": undefined,
                                    "next": [Circular],
                                    "tag": 36,
                                  },
                                  "tag": 36,
                                },
                                "next": Object {
                                  "baseState": null,
                                  "baseUpdate": null,
                                  "memoizedState": Array [
                                    <MovieDetailsPage
                                      fetchGenres={[Function]}
                                      fetchMoviesOnGenre={[Function]}
                                      fetchPopular={[Function]}
                                      fetchSearchResults={[Function]}
                                      fetchVideo={[Function]}
                                      genres={Array []}
                                      getMainMovieDetails={[Function]}
                                      mainMovie={Object {}}
                                      movies={Object {}}
                                    />,
                                    Array [
                                      undefined,
                                      [Function],
                                      Object {
                                        "fetchGenres": [Function],
                                        "fetchMoviesOnGenre": [Function],
                                        "fetchPopular": [Function],
                                        "fetchSearchResults": [Function],
                                        "fetchVideo": [Function],
                                        "genres": Array [],
                                        "getMainMovieDetails": [Function],
                                        "mainMovie": Object {},
                                        "movies": Object {},
                                      },
                                    ],
                                  ],
                                  "next": Object {
                                    "baseState": null,
                                    "baseUpdate": null,
                                    "memoizedState": Array [
                                      <Context.Provider
                                        value={
                                          Object {
                                            "store": Object {
                                              "clearActions": [Function],
                                              "dispatch": [Function],
                                              "getActions": [Function],
                                              "getState": [Function],
                                              "replaceReducer": [Function],
                                              "subscribe": [Function],
                                            },
                                            "subscription": Subscription {
                                              "handleChangeWrapper": [Function],
                                              "listeners": Object {
                                                "clear": [Function],
                                                "get": [Function],
                                                "notify": [Function],
                                                "subscribe": [Function],
                                              },
                                              "onStateChange": [Function],
                                              "parentSub": Subscription {
                                                "handleChangeWrapper": [Function],
                                                "listeners": Object {
                                                  "clear": [Function],
                                                  "get": [Function],
                                                  "notify": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "onStateChange": [Function],
                                                "parentSub": undefined,
                                                "store": Object {
                                                  "clearActions": [Function],
                                                  "dispatch": [Function],
                                                  "getActions": [Function],
                                                  "getState": [Function],
                                                  "replaceReducer": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "unsubscribe": [Function],
                                              },
                                              "store": Object {
                                                "clearActions": [Function],
                                                "dispatch": [Function],
                                                "getActions": [Function],
                                                "getState": [Function],
                                                "replaceReducer": [Function],
                                                "subscribe": [Function],
                                              },
                                              "unsubscribe": [Function],
                                            },
                                          }
                                        }
                                      >
                                        <MovieDetailsPage
                                          fetchGenres={[Function]}
                                          fetchMoviesOnGenre={[Function]}
                                          fetchPopular={[Function]}
                                          fetchSearchResults={[Function]}
                                          fetchVideo={[Function]}
                                          genres={Array []}
                                          getMainMovieDetails={[Function]}
                                          mainMovie={Object {}}
                                          movies={Object {}}
                                        />
                                      </Context.Provider>,
                                      Array [
                                        Object {
                                          "$$typeof": Symbol(react.context),
                                          "Consumer": Object {
                                            "$$typeof": Symbol(react.context),
                                            "_calculateChangedBits": null,
                                            "_context": [Circular],
                                          },
                                          "Provider": Object {
                                            "$$typeof": Symbol(react.provider),
                                            "_context": [Circular],
                                          },
                                          "_calculateChangedBits": null,
                                          "_currentRenderer": Object {},
                                          "_currentRenderer2": null,
                                          "_currentValue": null,
                                          "_currentValue2": null,
                                          "_threadCount": 0,
                                        },
                                        <MovieDetailsPage
                                          fetchGenres={[Function]}
                                          fetchMoviesOnGenre={[Function]}
                                          fetchPopular={[Function]}
                                          fetchSearchResults={[Function]}
                                          fetchVideo={[Function]}
                                          genres={Array []}
                                          getMainMovieDetails={[Function]}
                                          mainMovie={Object {}}
                                          movies={Object {}}
                                        />,
                                        Object {
                                          "store": Object {
                                            "clearActions": [Function],
                                            "dispatch": [Function],
                                            "getActions": [Function],
                                            "getState": [Function],
                                            "replaceReducer": [Function],
                                            "subscribe": [Function],
                                          },
                                          "subscription": Subscription {
                                            "handleChangeWrapper": [Function],
                                            "listeners": Object {
                                              "clear": [Function],
                                              "get": [Function],
                                              "notify": [Function],
                                              "subscribe": [Function],
                                            },
                                            "onStateChange": [Function],
                                            "parentSub": Subscription {
                                              "handleChangeWrapper": [Function],
                                              "listeners": Object {
                                                "clear": [Function],
                                                "get": [Function],
                                                "notify": [Function],
                                                "subscribe": [Function],
                                              },
                                              "onStateChange": [Function],
                                              "parentSub": undefined,
                                              "store": Object {
                                                "clearActions": [Function],
                                                "dispatch": [Function],
                                                "getActions": [Function],
                                                "getState": [Function],
                                                "replaceReducer": [Function],
                                                "subscribe": [Function],
                                              },
                                              "unsubscribe": [Function],
                                            },
                                            "store": Object {
                                              "clearActions": [Function],
                                              "dispatch": [Function],
                                              "getActions": [Function],
                                              "getState": [Function],
                                              "replaceReducer": [Function],
                                              "subscribe": [Function],
                                            },
                                            "unsubscribe": [Function],
                                          },
                                        },
                                      ],
                                    ],
                                    "next": null,
                                    "queue": null,
                                  },
                                  "queue": null,
                                },
                                "queue": null,
                              },
                              "queue": null,
                            },
                            "queue": null,
                          },
                          "queue": null,
                        },
                        "queue": null,
                      },
                      "queue": null,
                    },
                    "queue": null,
                  },
                  "queue": Object {
                    "dispatch": [Function],
                    "last": null,
                    "lastRenderedReducer": [Function],
                    "lastRenderedState": Array [
                      null,
                      0,
                    ],
                  },
                },
                "queue": null,
              },
              "queue": null,
            },
            "queue": null,
          },
          "queue": null,
        },
        "queue": null,
      },
      "mode": 0,
      "nextEffect": [Circular],
      "pendingProps": Object {},
      "ref": null,
      "return": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 5,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": [Circular],
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": [Circular],
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 0,
        "elementType": Object {
          "$$typeof": Symbol(react.provider),
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": [Circular],
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          },
        },
        "expirationTime": 0,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": Object {
          "children": <Memo(ConnectFunction) />,
          "value": Object {
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "subscription": Subscription {
              "handleChangeWrapper": [Function],
              "listeners": Object {
                "clear": [Function],
                "get": [Function],
                "notify": [Function],
                "subscribe": [Function],
              },
              "onStateChange": [Function],
              "parentSub": undefined,
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "unsubscribe": [Function],
            },
          },
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": <Memo(ConnectFunction) />,
          "value": Object {
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "subscription": Subscription {
              "handleChangeWrapper": [Function],
              "listeners": Object {
                "clear": [Function],
                "get": [Function],
                "notify": [Function],
                "subscribe": [Function],
              },
              "onStateChange": [Function],
              "parentSub": undefined,
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "unsubscribe": [Function],
            },
          },
        },
        "ref": null,
        "return": [Circular],
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": null,
        "tag": 10,
        "treeBaseDuration": 0,
        "type": Object {
          "$$typeof": Symbol(react.provider),
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": [Circular],
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          },
        },
        "updateQueue": null,
      },
      "selfBaseDuration": 0,
      "sibling": null,
      "stateNode": null,
      "tag": 15,
      "treeBaseDuration": 0,
      "type": [Function],
      "updateQueue": Object {
        "lastEffect": Object {
          "create": [Function],
          "deps": Array [
            Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            Subscription {
              "handleChangeWrapper": [Function],
              "listeners": Object {
                "clear": [Function],
                "get": [Function],
                "notify": [Function],
                "subscribe": [Function],
              },
              "onStateChange": [Function],
              "parentSub": Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": undefined,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "unsubscribe": [Function],
            },
            [Function],
          ],
          "destroy": [Function],
          "next": Object {
            "create": [Function],
            "deps": null,
            "destroy": undefined,
            "next": [Circular],
            "tag": 36,
          },
          "tag": 36,
        },
      },
    },
    "memoizedProps": Object {
      "children": <Memo(ConnectFunction) />,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
    "memoizedState": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      },
    },
    "mode": 0,
    "nextEffect": FiberNode {
      "_debugHookTypes": null,
      "_debugID": 1,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": null,
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": -1,
      "alternate": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 1,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": [Circular],
        "child": null,
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 0,
        "elementType": null,
        "expirationTime": 1073741823,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": null,
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": null,
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": Object {
          "containerInfo": <div>
            <main>
              <div
                class="preloader"
              >
                <p>
                  App is loading
                </p>
              </div>
            </main>
          </div>,
          "context": Object {},
          "current": [Circular],
          "didError": false,
          "earliestPendingTime": 0,
          "earliestSuspendedTime": 0,
          "expirationTime": 0,
          "finishedWork": null,
          "firstBatch": null,
          "hydrate": false,
          "interactionThreadID": 1,
          "latestPendingTime": 0,
          "latestPingedTime": 0,
          "latestSuspendedTime": 0,
          "memoizedInteractions": Set {},
          "nextExpirationTimeToWorkOn": 0,
          "nextScheduledRoot": null,
          "pendingChildren": null,
          "pendingCommitExpirationTime": 0,
          "pendingContext": null,
          "pendingInteractionMap": Map {},
          "pingCache": null,
          "timeoutHandle": -1,
        },
        "tag": 3,
        "treeBaseDuration": 0,
        "type": null,
        "updateQueue": Object {
          "baseState": null,
          "firstCapturedEffect": null,
          "firstCapturedUpdate": null,
          "firstEffect": null,
          "firstUpdate": Object {
            "callback": null,
            "expirationTime": 1073741823,
            "next": null,
            "nextEffect": null,
            "payload": Object {
              "element": <Provider
                store={
                  Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  }
                }
              >
                <Memo(ConnectFunction) />
              </Provider>,
            },
            "tag": 0,
          },
          "lastCapturedEffect": null,
          "lastCapturedUpdate": null,
          "lastEffect": null,
          "lastUpdate": Object {
            "callback": null,
            "expirationTime": 1073741823,
            "next": null,
            "nextEffect": null,
            "payload": Object {
              "element": <Provider
                store={
                  Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  }
                }
              >
                <Memo(ConnectFunction) />
              </Provider>,
            },
            "tag": 0,
          },
        },
      },
      "child": [Circular],
      "childExpirationTime": 0,
      "contextDependencies": null,
      "effectTag": 32,
      "elementType": null,
      "expirationTime": 0,
      "firstEffect": FiberNode {
        "_debugHookTypes": Array [
          "useMemo",
          "useMemo",
          "useContext",
          "useMemo",
          "useMemo",
          "useMemo",
          "useReducer",
          "useRef",
          "useRef",
          "useRef",
          "useRef",
          "useMemo",
          "useLayoutEffect",
          "useLayoutEffect",
          "useMemo",
          "useMemo",
        ],
        "_debugID": 6,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 7,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 8,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 9,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 10,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 11,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "p",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "App is loading",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "App is loading",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <p>
                    App is loading
                  </p>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "p",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <p>
                    App is loading
                  </p>,
                  "className": "preloader",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <p>
                    App is loading
                  </p>,
                  "className": "preloader",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="preloader"
                >
                  <p>
                    App is loading
                  </p>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "main",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <div
                  className="preloader"
                >
                  <p>
                    App is loading
                  </p>
                </div>,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <div
                  className="preloader"
                >
                  <p>
                    App is loading
                  </p>
                </div>,
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <main>
                <div
                  class="preloader"
                >
                  <p>
                    App is loading
                  </p>
                </div>
              </main>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "main",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "fetchGenres": [Function],
              "fetchMoviesOnGenre": [Function],
              "fetchPopular": [Function],
              "fetchSearchResults": [Function],
              "fetchVideo": [Function],
              "genres": Array [],
              "getMainMovieDetails": [Function],
              "mainMovie": Object {},
              "movies": Object {},
            },
            "memoizedState": Object {},
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "fetchGenres": [Function],
              "fetchMoviesOnGenre": [Function],
              "fetchPopular": [Function],
              "fetchSearchResults": [Function],
              "fetchVideo": [Function],
              "genres": Array [],
              "getMainMovieDetails": [Function],
              "mainMovie": Object {},
              "movies": Object {},
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": MovieDetailsPage {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "fetchGenres": [Function],
                "fetchMoviesOnGenre": [Function],
                "fetchPopular": [Function],
                "fetchSearchResults": [Function],
                "fetchVideo": [Function],
                "genres": Array [],
                "getMainMovieDetails": [Function],
                "mainMovie": Object {},
                "movies": Object {},
              },
              "refs": Object {},
              "state": Object {},
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": Object {
            "$$typeof": Symbol(react.provider),
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": [Circular],
              "_calculateChangedBits": null,
              "_currentRenderer": Object {},
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
          },
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <MovieDetailsPage
              fetchGenres={[Function]}
              fetchMoviesOnGenre={[Function]}
              fetchPopular={[Function]}
              fetchSearchResults={[Function]}
              fetchVideo={[Function]}
              genres={Array []}
              getMainMovieDetails={[Function]}
              mainMovie={Object {}}
              movies={Object {}}
            />,
            "value": Object {
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "subscription": Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": Subscription {
                  "handleChangeWrapper": [Function],
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
            },
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <MovieDetailsPage
              fetchGenres={[Function]}
              fetchMoviesOnGenre={[Function]}
              fetchPopular={[Function]}
              fetchSearchResults={[Function]}
              fetchVideo={[Function]}
              genres={Array []}
              getMainMovieDetails={[Function]}
              mainMovie={Object {}}
              movies={Object {}}
            />,
            "value": Object {
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "subscription": Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": Subscription {
                  "handleChangeWrapper": [Function],
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
            },
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 10,
          "treeBaseDuration": 0,
          "type": Object {
            "$$typeof": Symbol(react.provider),
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": [Circular],
              "_calculateChangedBits": null,
              "_currentRenderer": Object {},
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
          },
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": Object {
          "expirationTime": 0,
          "first": Object {
            "context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": Object {},
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
            "next": null,
            "observedBits": 1073741823,
          },
        },
        "effectTag": 5,
        "elementType": Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "displayName": "Connect(MovieDetailsPage)",
          "type": [Function],
        },
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {},
        "memoizedState": Object {
          "baseState": null,
          "baseUpdate": null,
          "memoizedState": Array [
            Array [
              undefined,
              undefined,
              Object {},
            ],
            Array [
              Object {},
            ],
          ],
          "next": Object {
            "baseState": null,
            "baseUpdate": null,
            "memoizedState": Array [
              Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": null,
                "_currentValue2": null,
                "_threadCount": 0,
              },
              Array [
                undefined,
                Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": null,
                  "_currentValue2": null,
                  "_threadCount": 0,
                },
              ],
            ],
            "next": Object {
              "baseState": null,
              "baseUpdate": null,
              "memoizedState": Array [
                [Function],
                Array [
                  Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                ],
              ],
              "next": Object {
                "baseState": null,
                "baseUpdate": null,
                "memoizedState": Array [
                  Array [
                    Subscription {
                      "handleChangeWrapper": [Function],
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": undefined,
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    [Function],
                  ],
                  Array [
                    Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    false,
                    Object {
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "subscription": Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": undefined,
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                    },
                  ],
                ],
                "next": Object {
                  "baseState": null,
                  "baseUpdate": null,
                  "memoizedState": Array [
                    Object {
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "subscription": Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": Subscription {
                          "handleChangeWrapper": [Function],
                          "listeners": Object {
                            "clear": [Function],
                            "get": [Function],
                            "notify": [Function],
                            "subscribe": [Function],
                          },
                          "onStateChange": [Function],
                          "parentSub": undefined,
                          "store": Object {
                            "clearActions": [Function],
                            "dispatch": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                          },
                          "unsubscribe": [Function],
                        },
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                    },
                    Array [
                      false,
                      Object {
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "subscription": Subscription {
                          "handleChangeWrapper": [Function],
                          "listeners": Object {
                            "clear": [Function],
                            "get": [Function],
                            "notify": [Function],
                            "subscribe": [Function],
                          },
                          "onStateChange": [Function],
                          "parentSub": undefined,
                          "store": Object {
                            "clearActions": [Function],
                            "dispatch": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                          },
                          "unsubscribe": [Function],
                        },
                      },
                      Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": Subscription {
                          "handleChangeWrapper": [Function],
                          "listeners": Object {
                            "clear": [Function],
                            "get": [Function],
                            "notify": [Function],
                            "subscribe": [Function],
                          },
                          "onStateChange": [Function],
                          "parentSub": undefined,
                          "store": Object {
                            "clearActions": [Function],
                            "dispatch": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                          },
                          "unsubscribe": [Function],
                        },
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                    ],
                  ],
                  "next": Object {
                    "baseState": Array [
                      null,
                      0,
                    ],
                    "baseUpdate": null,
                    "memoizedState": Array [
                      null,
                      0,
                    ],
                    "next": Object {
                      "baseState": null,
                      "baseUpdate": null,
                      "memoizedState": Object {
                        "current": Object {
                          "fetchGenres": [Function],
                          "fetchMoviesOnGenre": [Function],
                          "fetchPopular": [Function],
                          "fetchSearchResults": [Function],
                          "fetchVideo": [Function],
                          "genres": Array [],
                          "getMainMovieDetails": [Function],
                          "mainMovie": Object {},
                          "movies": Object {},
                        },
                      },
                      "next": Object {
                        "baseState": null,
                        "baseUpdate": null,
                        "memoizedState": Object {
                          "current": Object {},
                        },
                        "next": Object {
                          "baseState": null,
                          "baseUpdate": null,
                          "memoizedState": Object {
                            "current": undefined,
                          },
                          "next": Object {
                            "baseState": null,
                            "baseUpdate": null,
                            "memoizedState": Object {
                              "current": false,
                            },
                            "next": Object {
                              "baseState": null,
                              "baseUpdate": null,
                              "memoizedState": Array [
                                Object {
                                  "fetchGenres": [Function],
                                  "fetchMoviesOnGenre": [Function],
                                  "fetchPopular": [Function],
                                  "fetchSearchResults": [Function],
                                  "fetchVideo": [Function],
                                  "genres": Array [],
                                  "getMainMovieDetails": [Function],
                                  "mainMovie": Object {},
                                  "movies": Object {},
                                },
                                Array [
                                  Object {
                                    "clearActions": [Function],
                                    "dispatch": [Function],
                                    "getActions": [Function],
                                    "getState": [Function],
                                    "replaceReducer": [Function],
                                    "subscribe": [Function],
                                  },
                                  null,
                                  Object {},
                                ],
                              ],
                              "next": Object {
                                "baseState": null,
                                "baseUpdate": null,
                                "memoizedState": Object {
                                  "create": [Function],
                                  "deps": null,
                                  "destroy": undefined,
                                  "next": Object {
                                    "create": [Function],
                                    "deps": Array [
                                      Object {
                                        "clearActions": [Function],
                                        "dispatch": [Function],
                                        "getActions": [Function],
                                        "getState": [Function],
                                        "replaceReducer": [Function],
                                        "subscribe": [Function],
                                      },
                                      Subscription {
                                        "handleChangeWrapper": [Function],
                                        "listeners": Object {
                                          "clear": [Function],
                                          "get": [Function],
                                          "notify": [Function],
                                          "subscribe": [Function],
                                        },
                                        "onStateChange": [Function],
                                        "parentSub": Subscription {
                                          "handleChangeWrapper": [Function],
                                          "listeners": Object {
                                            "clear": [Function],
                                            "get": [Function],
                                            "notify": [Function],
                                            "subscribe": [Function],
                                          },
                                          "onStateChange": [Function],
                                          "parentSub": undefined,
                                          "store": Object {
                                            "clearActions": [Function],
                                            "dispatch": [Function],
                                            "getActions": [Function],
                                            "getState": [Function],
                                            "replaceReducer": [Function],
                                            "subscribe": [Function],
                                          },
                                          "unsubscribe": [Function],
                                        },
                                        "store": Object {
                                          "clearActions": [Function],
                                          "dispatch": [Function],
                                          "getActions": [Function],
                                          "getState": [Function],
                                          "replaceReducer": [Function],
                                          "subscribe": [Function],
                                        },
                                        "unsubscribe": [Function],
                                      },
                                      [Function],
                                    ],
                                    "destroy": [Function],
                                    "next": [Circular],
                                    "tag": 36,
                                  },
                                  "tag": 36,
                                },
                                "next": Object {
                                  "baseState": null,
                                  "baseUpdate": null,
                                  "memoizedState": Object {
                                    "create": [Function],
                                    "deps": Array [
                                      Object {
                                        "clearActions": [Function],
                                        "dispatch": [Function],
                                        "getActions": [Function],
                                        "getState": [Function],
                                        "replaceReducer": [Function],
                                        "subscribe": [Function],
                                      },
                                      Subscription {
                                        "handleChangeWrapper": [Function],
                                        "listeners": Object {
                                          "clear": [Function],
                                          "get": [Function],
                                          "notify": [Function],
                                          "subscribe": [Function],
                                        },
                                        "onStateChange": [Function],
                                        "parentSub": Subscription {
                                          "handleChangeWrapper": [Function],
                                          "listeners": Object {
                                            "clear": [Function],
                                            "get": [Function],
                                            "notify": [Function],
                                            "subscribe": [Function],
                                          },
                                          "onStateChange": [Function],
                                          "parentSub": undefined,
                                          "store": Object {
                                            "clearActions": [Function],
                                            "dispatch": [Function],
                                            "getActions": [Function],
                                            "getState": [Function],
                                            "replaceReducer": [Function],
                                            "subscribe": [Function],
                                          },
                                          "unsubscribe": [Function],
                                        },
                                        "store": Object {
                                          "clearActions": [Function],
                                          "dispatch": [Function],
                                          "getActions": [Function],
                                          "getState": [Function],
                                          "replaceReducer": [Function],
                                          "subscribe": [Function],
                                        },
                                        "unsubscribe": [Function],
                                      },
                                      [Function],
                                    ],
                                    "destroy": [Function],
                                    "next": Object {
                                      "create": [Function],
                                      "deps": null,
                                      "destroy": undefined,
                                      "next": [Circular],
                                      "tag": 36,
                                    },
                                    "tag": 36,
                                  },
                                  "next": Object {
                                    "baseState": null,
                                    "baseUpdate": null,
                                    "memoizedState": Array [
                                      <MovieDetailsPage
                                        fetchGenres={[Function]}
                                        fetchMoviesOnGenre={[Function]}
                                        fetchPopular={[Function]}
                                        fetchSearchResults={[Function]}
                                        fetchVideo={[Function]}
                                        genres={Array []}
                                        getMainMovieDetails={[Function]}
                                        mainMovie={Object {}}
                                        movies={Object {}}
                                      />,
                                      Array [
                                        undefined,
                                        [Function],
                                        Object {
                                          "fetchGenres": [Function],
                                          "fetchMoviesOnGenre": [Function],
                                          "fetchPopular": [Function],
                                          "fetchSearchResults": [Function],
                                          "fetchVideo": [Function],
                                          "genres": Array [],
                                          "getMainMovieDetails": [Function],
                                          "mainMovie": Object {},
                                          "movies": Object {},
                                        },
                                      ],
                                    ],
                                    "next": Object {
                                      "baseState": null,
                                      "baseUpdate": null,
                                      "memoizedState": Array [
                                        <Context.Provider
                                          value={
                                            Object {
                                              "store": Object {
                                                "clearActions": [Function],
                                                "dispatch": [Function],
                                                "getActions": [Function],
                                                "getState": [Function],
                                                "replaceReducer": [Function],
                                                "subscribe": [Function],
                                              },
                                              "subscription": Subscription {
                                                "handleChangeWrapper": [Function],
                                                "listeners": Object {
                                                  "clear": [Function],
                                                  "get": [Function],
                                                  "notify": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "onStateChange": [Function],
                                                "parentSub": Subscription {
                                                  "handleChangeWrapper": [Function],
                                                  "listeners": Object {
                                                    "clear": [Function],
                                                    "get": [Function],
                                                    "notify": [Function],
                                                    "subscribe": [Function],
                                                  },
                                                  "onStateChange": [Function],
                                                  "parentSub": undefined,
                                                  "store": Object {
                                                    "clearActions": [Function],
                                                    "dispatch": [Function],
                                                    "getActions": [Function],
                                                    "getState": [Function],
                                                    "replaceReducer": [Function],
                                                    "subscribe": [Function],
                                                  },
                                                  "unsubscribe": [Function],
                                                },
                                                "store": Object {
                                                  "clearActions": [Function],
                                                  "dispatch": [Function],
                                                  "getActions": [Function],
                                                  "getState": [Function],
                                                  "replaceReducer": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "unsubscribe": [Function],
                                              },
                                            }
                                          }
                                        >
                                          <MovieDetailsPage
                                            fetchGenres={[Function]}
                                            fetchMoviesOnGenre={[Function]}
                                            fetchPopular={[Function]}
                                            fetchSearchResults={[Function]}
                                            fetchVideo={[Function]}
                                            genres={Array []}
                                            getMainMovieDetails={[Function]}
                                            mainMovie={Object {}}
                                            movies={Object {}}
                                          />
                                        </Context.Provider>,
                                        Array [
                                          Object {
                                            "$$typeof": Symbol(react.context),
                                            "Consumer": Object {
                                              "$$typeof": Symbol(react.context),
                                              "_calculateChangedBits": null,
                                              "_context": [Circular],
                                            },
                                            "Provider": Object {
                                              "$$typeof": Symbol(react.provider),
                                              "_context": [Circular],
                                            },
                                            "_calculateChangedBits": null,
                                            "_currentRenderer": Object {},
                                            "_currentRenderer2": null,
                                            "_currentValue": null,
                                            "_currentValue2": null,
                                            "_threadCount": 0,
                                          },
                                          <MovieDetailsPage
                                            fetchGenres={[Function]}
                                            fetchMoviesOnGenre={[Function]}
                                            fetchPopular={[Function]}
                                            fetchSearchResults={[Function]}
                                            fetchVideo={[Function]}
                                            genres={Array []}
                                            getMainMovieDetails={[Function]}
                                            mainMovie={Object {}}
                                            movies={Object {}}
                                          />,
                                          Object {
                                            "store": Object {
                                              "clearActions": [Function],
                                              "dispatch": [Function],
                                              "getActions": [Function],
                                              "getState": [Function],
                                              "replaceReducer": [Function],
                                              "subscribe": [Function],
                                            },
                                            "subscription": Subscription {
                                              "handleChangeWrapper": [Function],
                                              "listeners": Object {
                                                "clear": [Function],
                                                "get": [Function],
                                                "notify": [Function],
                                                "subscribe": [Function],
                                              },
                                              "onStateChange": [Function],
                                              "parentSub": Subscription {
                                                "handleChangeWrapper": [Function],
                                                "listeners": Object {
                                                  "clear": [Function],
                                                  "get": [Function],
                                                  "notify": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "onStateChange": [Function],
                                                "parentSub": undefined,
                                                "store": Object {
                                                  "clearActions": [Function],
                                                  "dispatch": [Function],
                                                  "getActions": [Function],
                                                  "getState": [Function],
                                                  "replaceReducer": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "unsubscribe": [Function],
                                              },
                                              "store": Object {
                                                "clearActions": [Function],
                                                "dispatch": [Function],
                                                "getActions": [Function],
                                                "getState": [Function],
                                                "replaceReducer": [Function],
                                                "subscribe": [Function],
                                              },
                                              "unsubscribe": [Function],
                                            },
                                          },
                                        ],
                                      ],
                                      "next": null,
                                      "queue": null,
                                    },
                                    "queue": null,
                                  },
                                  "queue": null,
                                },
                                "queue": null,
                              },
                              "queue": null,
                            },
                            "queue": null,
                          },
                          "queue": null,
                        },
                        "queue": null,
                      },
                      "queue": null,
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "last": null,
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": Array [
                        null,
                        0,
                      ],
                    },
                  },
                  "queue": null,
                },
                "queue": null,
              },
              "queue": null,
            },
            "queue": null,
          },
          "queue": null,
        },
        "mode": 0,
        "nextEffect": [Circular],
        "pendingProps": Object {},
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 5,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": Object {
            "$$typeof": Symbol(react.provider),
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": [Circular],
              "_calculateChangedBits": null,
              "_currentRenderer": Object {},
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
          },
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "children": <Memo(ConnectFunction) />,
            "value": Object {
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "subscription": Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": undefined,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
            },
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <Memo(ConnectFunction) />,
            "value": Object {
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "subscription": Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": undefined,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
            },
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 10,
          "treeBaseDuration": 0,
          "type": Object {
            "$$typeof": Symbol(react.provider),
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": [Circular],
              "_calculateChangedBits": null,
              "_currentRenderer": Object {},
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
          },
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": null,
        "tag": 15,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": Object {
          "lastEffect": Object {
            "create": [Function],
            "deps": Array [
              Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": Subscription {
                  "handleChangeWrapper": [Function],
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
              [Function],
            ],
            "destroy": [Function],
            "next": Object {
              "create": [Function],
              "deps": null,
              "destroy": undefined,
              "next": [Circular],
              "tag": 36,
            },
            "tag": 36,
          },
        },
      },
      "index": 0,
      "key": null,
      "lastEffect": [Circular],
      "memoizedProps": null,
      "memoizedState": Object {
        "element": <Provider
          store={
            Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            }
          }
        >
          <Memo(ConnectFunction) />
        </Provider>,
      },
      "mode": 0,
      "nextEffect": null,
      "pendingProps": null,
      "ref": null,
      "return": null,
      "selfBaseDuration": 0,
      "sibling": null,
      "stateNode": Object {
        "containerInfo": <div>
          <main>
            <div
              class="preloader"
            >
              <p>
                App is loading
              </p>
            </div>
          </main>
        </div>,
        "context": Object {},
        "current": [Circular],
        "didError": false,
        "earliestPendingTime": 0,
        "earliestSuspendedTime": 0,
        "expirationTime": 0,
        "finishedWork": null,
        "firstBatch": null,
        "hydrate": false,
        "interactionThreadID": 1,
        "latestPendingTime": 0,
        "latestPingedTime": 0,
        "latestSuspendedTime": 0,
        "memoizedInteractions": Set {},
        "nextExpirationTimeToWorkOn": 0,
        "nextScheduledRoot": null,
        "pendingChildren": null,
        "pendingCommitExpirationTime": 0,
        "pendingContext": null,
        "pendingInteractionMap": Map {},
        "pingCache": null,
        "timeoutHandle": -1,
      },
      "tag": 3,
      "treeBaseDuration": 0,
      "type": null,
      "updateQueue": Object {
        "baseState": Object {
          "element": <Provider
            store={
              Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              }
            }
          >
            <Memo(ConnectFunction) />
          </Provider>,
        },
        "firstCapturedEffect": null,
        "firstCapturedUpdate": null,
        "firstEffect": null,
        "firstUpdate": null,
        "lastCapturedEffect": null,
        "lastCapturedUpdate": null,
        "lastEffect": null,
        "lastUpdate": null,
      },
    },
    "pendingProps": Object {
      "children": <Memo(ConnectFunction) />,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
    "ref": null,
    "return": FiberNode {
      "_debugHookTypes": null,
      "_debugID": 1,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": null,
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": -1,
      "alternate": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 1,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": [Circular],
        "child": null,
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 0,
        "elementType": null,
        "expirationTime": 1073741823,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": null,
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": null,
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": Object {
          "containerInfo": <div>
            <main>
              <div
                class="preloader"
              >
                <p>
                  App is loading
                </p>
              </div>
            </main>
          </div>,
          "context": Object {},
          "current": [Circular],
          "didError": false,
          "earliestPendingTime": 0,
          "earliestSuspendedTime": 0,
          "expirationTime": 0,
          "finishedWork": null,
          "firstBatch": null,
          "hydrate": false,
          "interactionThreadID": 1,
          "latestPendingTime": 0,
          "latestPingedTime": 0,
          "latestSuspendedTime": 0,
          "memoizedInteractions": Set {},
          "nextExpirationTimeToWorkOn": 0,
          "nextScheduledRoot": null,
          "pendingChildren": null,
          "pendingCommitExpirationTime": 0,
          "pendingContext": null,
          "pendingInteractionMap": Map {},
          "pingCache": null,
          "timeoutHandle": -1,
        },
        "tag": 3,
        "treeBaseDuration": 0,
        "type": null,
        "updateQueue": Object {
          "baseState": null,
          "firstCapturedEffect": null,
          "firstCapturedUpdate": null,
          "firstEffect": null,
          "firstUpdate": Object {
            "callback": null,
            "expirationTime": 1073741823,
            "next": null,
            "nextEffect": null,
            "payload": Object {
              "element": <Provider
                store={
                  Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  }
                }
              >
                <Memo(ConnectFunction) />
              </Provider>,
            },
            "tag": 0,
          },
          "lastCapturedEffect": null,
          "lastCapturedUpdate": null,
          "lastEffect": null,
          "lastUpdate": Object {
            "callback": null,
            "expirationTime": 1073741823,
            "next": null,
            "nextEffect": null,
            "payload": Object {
              "element": <Provider
                store={
                  Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  }
                }
              >
                <Memo(ConnectFunction) />
              </Provider>,
            },
            "tag": 0,
          },
        },
      },
      "child": [Circular],
      "childExpirationTime": 0,
      "contextDependencies": null,
      "effectTag": 32,
      "elementType": null,
      "expirationTime": 0,
      "firstEffect": FiberNode {
        "_debugHookTypes": Array [
          "useMemo",
          "useMemo",
          "useContext",
          "useMemo",
          "useMemo",
          "useMemo",
          "useReducer",
          "useRef",
          "useRef",
          "useRef",
          "useRef",
          "useMemo",
          "useLayoutEffect",
          "useLayoutEffect",
          "useMemo",
          "useMemo",
        ],
        "_debugID": 6,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 7,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 8,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 9,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 10,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 11,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "p",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "App is loading",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "App is loading",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <p>
                    App is loading
                  </p>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "p",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <p>
                    App is loading
                  </p>,
                  "className": "preloader",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <p>
                    App is loading
                  </p>,
                  "className": "preloader",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="preloader"
                >
                  <p>
                    App is loading
                  </p>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "main",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <div
                  className="preloader"
                >
                  <p>
                    App is loading
                  </p>
                </div>,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <div
                  className="preloader"
                >
                  <p>
                    App is loading
                  </p>
                </div>,
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <main>
                <div
                  class="preloader"
                >
                  <p>
                    App is loading
                  </p>
                </div>
              </main>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "main",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "fetchGenres": [Function],
              "fetchMoviesOnGenre": [Function],
              "fetchPopular": [Function],
              "fetchSearchResults": [Function],
              "fetchVideo": [Function],
              "genres": Array [],
              "getMainMovieDetails": [Function],
              "mainMovie": Object {},
              "movies": Object {},
            },
            "memoizedState": Object {},
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "fetchGenres": [Function],
              "fetchMoviesOnGenre": [Function],
              "fetchPopular": [Function],
              "fetchSearchResults": [Function],
              "fetchVideo": [Function],
              "genres": Array [],
              "getMainMovieDetails": [Function],
              "mainMovie": Object {},
              "movies": Object {},
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": MovieDetailsPage {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "fetchGenres": [Function],
                "fetchMoviesOnGenre": [Function],
                "fetchPopular": [Function],
                "fetchSearchResults": [Function],
                "fetchVideo": [Function],
                "genres": Array [],
                "getMainMovieDetails": [Function],
                "mainMovie": Object {},
                "movies": Object {},
              },
              "refs": Object {},
              "state": Object {},
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": Object {
            "$$typeof": Symbol(react.provider),
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": [Circular],
              "_calculateChangedBits": null,
              "_currentRenderer": Object {},
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
          },
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <MovieDetailsPage
              fetchGenres={[Function]}
              fetchMoviesOnGenre={[Function]}
              fetchPopular={[Function]}
              fetchSearchResults={[Function]}
              fetchVideo={[Function]}
              genres={Array []}
              getMainMovieDetails={[Function]}
              mainMovie={Object {}}
              movies={Object {}}
            />,
            "value": Object {
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "subscription": Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": Subscription {
                  "handleChangeWrapper": [Function],
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
            },
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <MovieDetailsPage
              fetchGenres={[Function]}
              fetchMoviesOnGenre={[Function]}
              fetchPopular={[Function]}
              fetchSearchResults={[Function]}
              fetchVideo={[Function]}
              genres={Array []}
              getMainMovieDetails={[Function]}
              mainMovie={Object {}}
              movies={Object {}}
            />,
            "value": Object {
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "subscription": Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": Subscription {
                  "handleChangeWrapper": [Function],
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
            },
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 10,
          "treeBaseDuration": 0,
          "type": Object {
            "$$typeof": Symbol(react.provider),
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": [Circular],
              "_calculateChangedBits": null,
              "_currentRenderer": Object {},
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
          },
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": Object {
          "expirationTime": 0,
          "first": Object {
            "context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": Object {},
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
            "next": null,
            "observedBits": 1073741823,
          },
        },
        "effectTag": 5,
        "elementType": Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "displayName": "Connect(MovieDetailsPage)",
          "type": [Function],
        },
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {},
        "memoizedState": Object {
          "baseState": null,
          "baseUpdate": null,
          "memoizedState": Array [
            Array [
              undefined,
              undefined,
              Object {},
            ],
            Array [
              Object {},
            ],
          ],
          "next": Object {
            "baseState": null,
            "baseUpdate": null,
            "memoizedState": Array [
              Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": null,
                "_currentValue2": null,
                "_threadCount": 0,
              },
              Array [
                undefined,
                Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": null,
                  "_currentValue2": null,
                  "_threadCount": 0,
                },
              ],
            ],
            "next": Object {
              "baseState": null,
              "baseUpdate": null,
              "memoizedState": Array [
                [Function],
                Array [
                  Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                ],
              ],
              "next": Object {
                "baseState": null,
                "baseUpdate": null,
                "memoizedState": Array [
                  Array [
                    Subscription {
                      "handleChangeWrapper": [Function],
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": undefined,
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    [Function],
                  ],
                  Array [
                    Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    false,
                    Object {
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "subscription": Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": undefined,
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                    },
                  ],
                ],
                "next": Object {
                  "baseState": null,
                  "baseUpdate": null,
                  "memoizedState": Array [
                    Object {
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "subscription": Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": Subscription {
                          "handleChangeWrapper": [Function],
                          "listeners": Object {
                            "clear": [Function],
                            "get": [Function],
                            "notify": [Function],
                            "subscribe": [Function],
                          },
                          "onStateChange": [Function],
                          "parentSub": undefined,
                          "store": Object {
                            "clearActions": [Function],
                            "dispatch": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                          },
                          "unsubscribe": [Function],
                        },
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                    },
                    Array [
                      false,
                      Object {
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "subscription": Subscription {
                          "handleChangeWrapper": [Function],
                          "listeners": Object {
                            "clear": [Function],
                            "get": [Function],
                            "notify": [Function],
                            "subscribe": [Function],
                          },
                          "onStateChange": [Function],
                          "parentSub": undefined,
                          "store": Object {
                            "clearActions": [Function],
                            "dispatch": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                          },
                          "unsubscribe": [Function],
                        },
                      },
                      Subscription {
                        "handleChangeWrapper": [Function],
                        "listeners": Object {
                          "clear": [Function],
                          "get": [Function],
                          "notify": [Function],
                          "subscribe": [Function],
                        },
                        "onStateChange": [Function],
                        "parentSub": Subscription {
                          "handleChangeWrapper": [Function],
                          "listeners": Object {
                            "clear": [Function],
                            "get": [Function],
                            "notify": [Function],
                            "subscribe": [Function],
                          },
                          "onStateChange": [Function],
                          "parentSub": undefined,
                          "store": Object {
                            "clearActions": [Function],
                            "dispatch": [Function],
                            "getActions": [Function],
                            "getState": [Function],
                            "replaceReducer": [Function],
                            "subscribe": [Function],
                          },
                          "unsubscribe": [Function],
                        },
                        "store": Object {
                          "clearActions": [Function],
                          "dispatch": [Function],
                          "getActions": [Function],
                          "getState": [Function],
                          "replaceReducer": [Function],
                          "subscribe": [Function],
                        },
                        "unsubscribe": [Function],
                      },
                    ],
                  ],
                  "next": Object {
                    "baseState": Array [
                      null,
                      0,
                    ],
                    "baseUpdate": null,
                    "memoizedState": Array [
                      null,
                      0,
                    ],
                    "next": Object {
                      "baseState": null,
                      "baseUpdate": null,
                      "memoizedState": Object {
                        "current": Object {
                          "fetchGenres": [Function],
                          "fetchMoviesOnGenre": [Function],
                          "fetchPopular": [Function],
                          "fetchSearchResults": [Function],
                          "fetchVideo": [Function],
                          "genres": Array [],
                          "getMainMovieDetails": [Function],
                          "mainMovie": Object {},
                          "movies": Object {},
                        },
                      },
                      "next": Object {
                        "baseState": null,
                        "baseUpdate": null,
                        "memoizedState": Object {
                          "current": Object {},
                        },
                        "next": Object {
                          "baseState": null,
                          "baseUpdate": null,
                          "memoizedState": Object {
                            "current": undefined,
                          },
                          "next": Object {
                            "baseState": null,
                            "baseUpdate": null,
                            "memoizedState": Object {
                              "current": false,
                            },
                            "next": Object {
                              "baseState": null,
                              "baseUpdate": null,
                              "memoizedState": Array [
                                Object {
                                  "fetchGenres": [Function],
                                  "fetchMoviesOnGenre": [Function],
                                  "fetchPopular": [Function],
                                  "fetchSearchResults": [Function],
                                  "fetchVideo": [Function],
                                  "genres": Array [],
                                  "getMainMovieDetails": [Function],
                                  "mainMovie": Object {},
                                  "movies": Object {},
                                },
                                Array [
                                  Object {
                                    "clearActions": [Function],
                                    "dispatch": [Function],
                                    "getActions": [Function],
                                    "getState": [Function],
                                    "replaceReducer": [Function],
                                    "subscribe": [Function],
                                  },
                                  null,
                                  Object {},
                                ],
                              ],
                              "next": Object {
                                "baseState": null,
                                "baseUpdate": null,
                                "memoizedState": Object {
                                  "create": [Function],
                                  "deps": null,
                                  "destroy": undefined,
                                  "next": Object {
                                    "create": [Function],
                                    "deps": Array [
                                      Object {
                                        "clearActions": [Function],
                                        "dispatch": [Function],
                                        "getActions": [Function],
                                        "getState": [Function],
                                        "replaceReducer": [Function],
                                        "subscribe": [Function],
                                      },
                                      Subscription {
                                        "handleChangeWrapper": [Function],
                                        "listeners": Object {
                                          "clear": [Function],
                                          "get": [Function],
                                          "notify": [Function],
                                          "subscribe": [Function],
                                        },
                                        "onStateChange": [Function],
                                        "parentSub": Subscription {
                                          "handleChangeWrapper": [Function],
                                          "listeners": Object {
                                            "clear": [Function],
                                            "get": [Function],
                                            "notify": [Function],
                                            "subscribe": [Function],
                                          },
                                          "onStateChange": [Function],
                                          "parentSub": undefined,
                                          "store": Object {
                                            "clearActions": [Function],
                                            "dispatch": [Function],
                                            "getActions": [Function],
                                            "getState": [Function],
                                            "replaceReducer": [Function],
                                            "subscribe": [Function],
                                          },
                                          "unsubscribe": [Function],
                                        },
                                        "store": Object {
                                          "clearActions": [Function],
                                          "dispatch": [Function],
                                          "getActions": [Function],
                                          "getState": [Function],
                                          "replaceReducer": [Function],
                                          "subscribe": [Function],
                                        },
                                        "unsubscribe": [Function],
                                      },
                                      [Function],
                                    ],
                                    "destroy": [Function],
                                    "next": [Circular],
                                    "tag": 36,
                                  },
                                  "tag": 36,
                                },
                                "next": Object {
                                  "baseState": null,
                                  "baseUpdate": null,
                                  "memoizedState": Object {
                                    "create": [Function],
                                    "deps": Array [
                                      Object {
                                        "clearActions": [Function],
                                        "dispatch": [Function],
                                        "getActions": [Function],
                                        "getState": [Function],
                                        "replaceReducer": [Function],
                                        "subscribe": [Function],
                                      },
                                      Subscription {
                                        "handleChangeWrapper": [Function],
                                        "listeners": Object {
                                          "clear": [Function],
                                          "get": [Function],
                                          "notify": [Function],
                                          "subscribe": [Function],
                                        },
                                        "onStateChange": [Function],
                                        "parentSub": Subscription {
                                          "handleChangeWrapper": [Function],
                                          "listeners": Object {
                                            "clear": [Function],
                                            "get": [Function],
                                            "notify": [Function],
                                            "subscribe": [Function],
                                          },
                                          "onStateChange": [Function],
                                          "parentSub": undefined,
                                          "store": Object {
                                            "clearActions": [Function],
                                            "dispatch": [Function],
                                            "getActions": [Function],
                                            "getState": [Function],
                                            "replaceReducer": [Function],
                                            "subscribe": [Function],
                                          },
                                          "unsubscribe": [Function],
                                        },
                                        "store": Object {
                                          "clearActions": [Function],
                                          "dispatch": [Function],
                                          "getActions": [Function],
                                          "getState": [Function],
                                          "replaceReducer": [Function],
                                          "subscribe": [Function],
                                        },
                                        "unsubscribe": [Function],
                                      },
                                      [Function],
                                    ],
                                    "destroy": [Function],
                                    "next": Object {
                                      "create": [Function],
                                      "deps": null,
                                      "destroy": undefined,
                                      "next": [Circular],
                                      "tag": 36,
                                    },
                                    "tag": 36,
                                  },
                                  "next": Object {
                                    "baseState": null,
                                    "baseUpdate": null,
                                    "memoizedState": Array [
                                      <MovieDetailsPage
                                        fetchGenres={[Function]}
                                        fetchMoviesOnGenre={[Function]}
                                        fetchPopular={[Function]}
                                        fetchSearchResults={[Function]}
                                        fetchVideo={[Function]}
                                        genres={Array []}
                                        getMainMovieDetails={[Function]}
                                        mainMovie={Object {}}
                                        movies={Object {}}
                                      />,
                                      Array [
                                        undefined,
                                        [Function],
                                        Object {
                                          "fetchGenres": [Function],
                                          "fetchMoviesOnGenre": [Function],
                                          "fetchPopular": [Function],
                                          "fetchSearchResults": [Function],
                                          "fetchVideo": [Function],
                                          "genres": Array [],
                                          "getMainMovieDetails": [Function],
                                          "mainMovie": Object {},
                                          "movies": Object {},
                                        },
                                      ],
                                    ],
                                    "next": Object {
                                      "baseState": null,
                                      "baseUpdate": null,
                                      "memoizedState": Array [
                                        <Context.Provider
                                          value={
                                            Object {
                                              "store": Object {
                                                "clearActions": [Function],
                                                "dispatch": [Function],
                                                "getActions": [Function],
                                                "getState": [Function],
                                                "replaceReducer": [Function],
                                                "subscribe": [Function],
                                              },
                                              "subscription": Subscription {
                                                "handleChangeWrapper": [Function],
                                                "listeners": Object {
                                                  "clear": [Function],
                                                  "get": [Function],
                                                  "notify": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "onStateChange": [Function],
                                                "parentSub": Subscription {
                                                  "handleChangeWrapper": [Function],
                                                  "listeners": Object {
                                                    "clear": [Function],
                                                    "get": [Function],
                                                    "notify": [Function],
                                                    "subscribe": [Function],
                                                  },
                                                  "onStateChange": [Function],
                                                  "parentSub": undefined,
                                                  "store": Object {
                                                    "clearActions": [Function],
                                                    "dispatch": [Function],
                                                    "getActions": [Function],
                                                    "getState": [Function],
                                                    "replaceReducer": [Function],
                                                    "subscribe": [Function],
                                                  },
                                                  "unsubscribe": [Function],
                                                },
                                                "store": Object {
                                                  "clearActions": [Function],
                                                  "dispatch": [Function],
                                                  "getActions": [Function],
                                                  "getState": [Function],
                                                  "replaceReducer": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "unsubscribe": [Function],
                                              },
                                            }
                                          }
                                        >
                                          <MovieDetailsPage
                                            fetchGenres={[Function]}
                                            fetchMoviesOnGenre={[Function]}
                                            fetchPopular={[Function]}
                                            fetchSearchResults={[Function]}
                                            fetchVideo={[Function]}
                                            genres={Array []}
                                            getMainMovieDetails={[Function]}
                                            mainMovie={Object {}}
                                            movies={Object {}}
                                          />
                                        </Context.Provider>,
                                        Array [
                                          Object {
                                            "$$typeof": Symbol(react.context),
                                            "Consumer": Object {
                                              "$$typeof": Symbol(react.context),
                                              "_calculateChangedBits": null,
                                              "_context": [Circular],
                                            },
                                            "Provider": Object {
                                              "$$typeof": Symbol(react.provider),
                                              "_context": [Circular],
                                            },
                                            "_calculateChangedBits": null,
                                            "_currentRenderer": Object {},
                                            "_currentRenderer2": null,
                                            "_currentValue": null,
                                            "_currentValue2": null,
                                            "_threadCount": 0,
                                          },
                                          <MovieDetailsPage
                                            fetchGenres={[Function]}
                                            fetchMoviesOnGenre={[Function]}
                                            fetchPopular={[Function]}
                                            fetchSearchResults={[Function]}
                                            fetchVideo={[Function]}
                                            genres={Array []}
                                            getMainMovieDetails={[Function]}
                                            mainMovie={Object {}}
                                            movies={Object {}}
                                          />,
                                          Object {
                                            "store": Object {
                                              "clearActions": [Function],
                                              "dispatch": [Function],
                                              "getActions": [Function],
                                              "getState": [Function],
                                              "replaceReducer": [Function],
                                              "subscribe": [Function],
                                            },
                                            "subscription": Subscription {
                                              "handleChangeWrapper": [Function],
                                              "listeners": Object {
                                                "clear": [Function],
                                                "get": [Function],
                                                "notify": [Function],
                                                "subscribe": [Function],
                                              },
                                              "onStateChange": [Function],
                                              "parentSub": Subscription {
                                                "handleChangeWrapper": [Function],
                                                "listeners": Object {
                                                  "clear": [Function],
                                                  "get": [Function],
                                                  "notify": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "onStateChange": [Function],
                                                "parentSub": undefined,
                                                "store": Object {
                                                  "clearActions": [Function],
                                                  "dispatch": [Function],
                                                  "getActions": [Function],
                                                  "getState": [Function],
                                                  "replaceReducer": [Function],
                                                  "subscribe": [Function],
                                                },
                                                "unsubscribe": [Function],
                                              },
                                              "store": Object {
                                                "clearActions": [Function],
                                                "dispatch": [Function],
                                                "getActions": [Function],
                                                "getState": [Function],
                                                "replaceReducer": [Function],
                                                "subscribe": [Function],
                                              },
                                              "unsubscribe": [Function],
                                            },
                                          },
                                        ],
                                      ],
                                      "next": null,
                                      "queue": null,
                                    },
                                    "queue": null,
                                  },
                                  "queue": null,
                                },
                                "queue": null,
                              },
                              "queue": null,
                            },
                            "queue": null,
                          },
                          "queue": null,
                        },
                        "queue": null,
                      },
                      "queue": null,
                    },
                    "queue": Object {
                      "dispatch": [Function],
                      "last": null,
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": Array [
                        null,
                        0,
                      ],
                    },
                  },
                  "queue": null,
                },
                "queue": null,
              },
              "queue": null,
            },
            "queue": null,
          },
          "queue": null,
        },
        "mode": 0,
        "nextEffect": [Circular],
        "pendingProps": Object {},
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 5,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": Object {
            "$$typeof": Symbol(react.provider),
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": [Circular],
              "_calculateChangedBits": null,
              "_currentRenderer": Object {},
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
          },
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "children": <Memo(ConnectFunction) />,
            "value": Object {
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "subscription": Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": undefined,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
            },
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <Memo(ConnectFunction) />,
            "value": Object {
              "store": Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              "subscription": Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": undefined,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
            },
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 10,
          "treeBaseDuration": 0,
          "type": Object {
            "$$typeof": Symbol(react.provider),
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": [Circular],
              "_calculateChangedBits": null,
              "_currentRenderer": Object {},
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
          },
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": null,
        "tag": 15,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": Object {
          "lastEffect": Object {
            "create": [Function],
            "deps": Array [
              Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              },
              Subscription {
                "handleChangeWrapper": [Function],
                "listeners": Object {
                  "clear": [Function],
                  "get": [Function],
                  "notify": [Function],
                  "subscribe": [Function],
                },
                "onStateChange": [Function],
                "parentSub": Subscription {
                  "handleChangeWrapper": [Function],
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "unsubscribe": [Function],
              },
              [Function],
            ],
            "destroy": [Function],
            "next": Object {
              "create": [Function],
              "deps": null,
              "destroy": undefined,
              "next": [Circular],
              "tag": 36,
            },
            "tag": 36,
          },
        },
      },
      "index": 0,
      "key": null,
      "lastEffect": [Circular],
      "memoizedProps": null,
      "memoizedState": Object {
        "element": <Provider
          store={
            Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            }
          }
        >
          <Memo(ConnectFunction) />
        </Provider>,
      },
      "mode": 0,
      "nextEffect": null,
      "pendingProps": null,
      "ref": null,
      "return": null,
      "selfBaseDuration": 0,
      "sibling": null,
      "stateNode": Object {
        "containerInfo": <div>
          <main>
            <div
              class="preloader"
            >
              <p>
                App is loading
              </p>
            </div>
          </main>
        </div>,
        "context": Object {},
        "current": [Circular],
        "didError": false,
        "earliestPendingTime": 0,
        "earliestSuspendedTime": 0,
        "expirationTime": 0,
        "finishedWork": null,
        "firstBatch": null,
        "hydrate": false,
        "interactionThreadID": 1,
        "latestPendingTime": 0,
        "latestPingedTime": 0,
        "latestSuspendedTime": 0,
        "memoizedInteractions": Set {},
        "nextExpirationTimeToWorkOn": 0,
        "nextScheduledRoot": null,
        "pendingChildren": null,
        "pendingCommitExpirationTime": 0,
        "pendingContext": null,
        "pendingInteractionMap": Map {},
        "pingCache": null,
        "timeoutHandle": -1,
      },
      "tag": 3,
      "treeBaseDuration": 0,
      "type": null,
      "updateQueue": Object {
        "baseState": Object {
          "element": <Provider
            store={
              Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              }
            }
          >
            <Memo(ConnectFunction) />
          </Provider>,
        },
        "firstCapturedEffect": null,
        "firstCapturedUpdate": null,
        "firstEffect": null,
        "firstUpdate": null,
        "lastCapturedEffect": null,
        "lastCapturedUpdate": null,
        "lastEffect": null,
        "lastUpdate": null,
      },
    },
    "selfBaseDuration": 0,
    "sibling": null,
    "stateNode": [Circular],
    "tag": 1,
    "treeBaseDuration": 0,
    "type": [Function],
    "updateQueue": null,
  },
  "_reactInternalInstance": Object {},
  "context": Object {},
  "notifySubscribers": [Function],
  "previousState": Object {
    "genres": Array [],
    "mainMovie": Object {},
    "movies": Object {},
  },
  "props": Object {
    "children": <Memo(ConnectFunction) />,
    "store": Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    },
  },
  "refs": Object {},
  "state": Object {
    "store": Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    },
    "subscription": Subscription {
      "handleChangeWrapper": [Function],
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "unsubscribe": [Function],
    },
  },
  "updater": Object {
    "enqueueForceUpdate": [Function],
    "enqueueReplaceState": [Function],
    "enqueueSetState": [Function],
    "isMounted": [Function],
  },
}
`;
